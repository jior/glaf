<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.core.mail.mapper.MailMapper">

	<resultMap id="mailResultMap" type="com.glaf.core.mail.Mail">
		<id property="id" column="ID_" jdbcType="VARCHAR" />
		<result property="templateId" column="TEMPLATEID_" jdbcType="VARCHAR" />
		<result property="receiverId" column="RECEIVERID_" jdbcType="VARCHAR" />
		<result property="senderId" column="SENDERID_" jdbcType="VARCHAR" />
		<result property="accountId" column="ACCOUNTID_" jdbcType="VARCHAR" />
		<result property="subject" column="SUBJECT_" jdbcType="VARCHAR" />
		<result property="retryTimes" column="RETRYTIMES_" jdbcType="INTEGER" />
		<result property="mailCC" column="MAILCC_" jdbcType="VARCHAR" />
		<result property="mailReplyTo" column="MAILREPLYTO_" jdbcType="VARCHAR" />
		<result property="taskId" column="TASKID_" jdbcType="VARCHAR" />
		<result property="nodeId" column="NODEID_" jdbcType="VARCHAR" />
		<result property="receiveStatus" column="RECEIVESTATUS_"
			jdbcType="INTEGER" />
		<result property="mailType" column="MAILTYPE_" jdbcType="VARCHAR" />
		<result property="sendStatus" column="SENDSTATUS_" jdbcType="INTEGER" />
		<result property="receiveDate" column="RECEIVEDATE_" jdbcType="TIMESTAMP" />
		<result property="lastViewDate" column="LASTVIEWDATE_"
			jdbcType="TIMESTAMP" />
		<result property="mailBCC" column="MAILBCC_" jdbcType="VARCHAR" />
		<result property="createDate" column="CREATEDATE_" jdbcType="TIMESTAMP" />
		<result property="mailTo" column="MAILTO_" jdbcType="VARCHAR" />
		<result property="resourceId" column="RESOURCEID_" jdbcType="VARCHAR" />
		<result property="mailBox" column="MAILBOX_" jdbcType="VARCHAR" />
		<result property="sendDate" column="SENDDATE_" jdbcType="TIMESTAMP" />
		<result property="mailSize" column="MAILSIZE_" jdbcType="INTEGER" />
		<result property="lastViewIP" column="LASTVIEWIP_" jdbcType="VARCHAR" />
		<result property="mailFrom" column="MAILFROM_" jdbcType="VARCHAR" />
		<result property="createBy" column="CREATEBY_" jdbcType="VARCHAR" />
		<result property="mailId" column="MAILID_" jdbcType="VARCHAR" />
		<result property="messageId" column="MESSAGEID_" jdbcType="VARCHAR" />
		<result property="status" column="STATUS_" jdbcType="INTEGER" />
	</resultMap>


	<insert id="insertMail" parameterType="com.glaf.core.mail.Mail">
		insert into
		MX_MAIL (
		ID_
		,TEMPLATEID_
		,RECEIVERID_
		,SENDERID_
		,ACCOUNTID_
		,SUBJECT_
		,RETRYTIMES_
		,MAILCC_
		,MAILREPLYTO_
		,TASKID_
		,NODEID_
		,RECEIVESTATUS_
		,MAILTYPE_
		,SENDSTATUS_
		,RECEIVEDATE_
		,LASTVIEWDATE_
		,MAILBCC_
		,CREATEDATE_
		,MAILTO_
		,RESOURCEID_
		,MAILBOX_
		,SENDDATE_
		,MAILSIZE_
		,LASTVIEWIP_
		,MAILFROM_
		,CREATEBY_
		,MAILID_
		,MESSAGEID_
		,STATUS_
		)
		values (
		#{id, jdbcType=VARCHAR}
		,#{templateId, jdbcType=VARCHAR}
		,#{receiverId, jdbcType=VARCHAR}
		,#{senderId, jdbcType=VARCHAR}
		,#{accountId, jdbcType=VARCHAR}
		,#{subject, jdbcType=VARCHAR}
		,#{retryTimes, jdbcType=INTEGER}
		,#{mailCC, jdbcType=VARCHAR}
		,#{mailReplyTo, jdbcType=VARCHAR}
		,#{taskId, jdbcType=VARCHAR}
		,#{nodeId, jdbcType=VARCHAR}
		,#{receiveStatus, jdbcType=INTEGER}
		,#{mailType, jdbcType=VARCHAR}
		,#{sendStatus, jdbcType=INTEGER}
		,#{receiveDate, jdbcType=TIMESTAMP}
		,#{lastViewDate, jdbcType=TIMESTAMP}
		,#{mailBCC, jdbcType=VARCHAR}
		,#{createDate, jdbcType=TIMESTAMP}
		,#{mailTo, jdbcType=VARCHAR}
		,#{resourceId, jdbcType=VARCHAR}
		,#{mailBox, jdbcType=VARCHAR}
		,#{sendDate, jdbcType=TIMESTAMP}
		,#{mailSize, jdbcType=INTEGER}
		,#{lastViewIP, jdbcType=VARCHAR}
		,#{mailFrom, jdbcType=VARCHAR}
		,#{createBy, jdbcType=VARCHAR}
		,#{mailId, jdbcType=VARCHAR}
		,#{messageId, jdbcType=VARCHAR}
		,#{status, jdbcType=INTEGER}
		)
    </insert>


	<update id="updateMail" parameterType="com.glaf.core.mail.Mail">
		update MX_MAIL
		set
		RETRYTIMES_ = #{retryTimes, jdbcType=INTEGER},
		RECEIVESTATUS_ = #{receiveStatus, jdbcType=INTEGER},
		RECEIVEDATE_ = #{receiveDate, jdbcType=TIMESTAMP},
		LASTVIEWDATE_ = #{lastViewDate, jdbcType=TIMESTAMP},
		MAILBOX_ = #{mailBox, jdbcType=VARCHAR},
		LASTVIEWIP_ = #{lastViewIP, jdbcType=VARCHAR},
		STATUS_ = #{status, jdbcType=INTEGER}
		where ID_ = #{id, jdbcType=VARCHAR}
	</update>


	<delete id="deleteMailById" parameterType="string">
		delete from MX_MAIL
		where where ID_ = #{id}
	</delete>

	<delete id="deleteMails" parameterType="com.glaf.core.mail.query.MailQuery">
		delete from MX_MAIL
		where (
		ID_ IN
		<foreach item="x_rowId" index="index" collection="rowIds"
			open="(" separator="," close=")">
			#{x_rowId}
              </foreach>
		)
	</delete>

	<select id="getMailById" parameterType="string" resultMap="mailResultMap">
		select * from MX_MAIL where ID_ = #{id}
	</select>

	<select id="getMailByMailId" parameterType="string" resultMap="mailResultMap">
		select * from MX_MAIL where MAILID_ = #{mailId}
	</select>


	<select id="getMails" parameterType="com.glaf.core.mail.query.MailQuery"
		resultMap="mailResultMap">
		select E.*
		<include refid="selectMailsSql" />
		<if test="orderBy != null">
			order by ${orderBy}
        </if>
	</select>

	<select id="getMailCount" parameterType="com.glaf.core.mail.query.MailQuery"
		resultType="int">
		select count(*)
		<include refid="selectMailsSql" />
	</select>

	<sql id="selectMailsSql">

		from MX_MAIL E

		<where>
			1 = 1

			<if test="templateId != null">
				and E.TEMPLATEID_ = #{templateId}
            </if>

			<if test="templateIds != null and templateIds.size() &gt; 0">
				and E.TEMPLATEID_ IN
				<foreach item="x_templateId" index="index" collection="templateIds"
					open="(" separator="," close=")">
					#{x_templateId}
                </foreach>
			</if>

			<if test="receiverId != null">
				and E.RECEIVERID_ = #{receiverId}
            </if>

			<if test="receiverIds != null and receiverIds.size() &gt; 0">
				and E.RECEIVERID_ IN
				<foreach item="x_receiverId" index="index" collection="receiverIds"
					open="(" separator="," close=")">
					#{x_receiverId}
                </foreach>
			</if>


			<if test="senderId != null">
				and E.SENDERID_ = #{senderId}
            </if>

			<if test="senderIds != null and senderIds.size() &gt; 0">
				and E.SENDERID_ IN
				<foreach item="x_senderId" index="index" collection="senderIds"
					open="(" separator="," close=")">
					#{x_senderId}
                </foreach>
			</if>


			<if test="accountId != null">
				and E.ACCOUNTID_ = #{accountId}
            </if>

			<if test="accountIds != null and accountIds.size() &gt; 0">
				and E.ACCOUNTID_ IN
				<foreach item="x_accountId" index="index" collection="accountIds"
					open="(" separator="," close=")">
					#{x_accountId}
                </foreach>
			</if>

			<if test="subjectLike != null">
				and E.SUBJECT_ like #{subjectLike}
            </if>

			<if test="retryTimes != null">
				and E.RETRYTIMES_ = #{retryTimes}
            </if>

			<if test="retryTimesGreaterThanOrEqual != null">
				and E.RETRYTIMES_ &gt;= #{retryTimesGreaterThanOrEqual}
			</if>

			<if test="retryTimesLessThanOrEqual != null">
				and E.RETRYTIMES_ &lt;= #{retryTimesLessThanOrEqual}
            </if>

			<if test="mailCCLike != null">
				and E.MAILCC_ like #{mailCCLike}
            </if>

			<if test="mailReplyToLike != null">
				and E.MAILREPLYTO_ like #{mailReplyToLike}
            </if>

			<if test="taskId != null">
				and E.TASKID_ = #{taskId}
            </if>

			<if test="taskIds != null and taskIds.size() &gt; 0">
				and E.TASKID_ IN
				<foreach item="x_taskId" index="index" collection="taskIds"
					open="(" separator="," close=")">
					#{x_taskId}
                </foreach>
			</if>

			<if test="nodeId != null">
				and E.NODEID_ = #{nodeId}
            </if>

			<if test="nodeIds != null and nodeIds.size() &gt; 0">
				and E.NODEID_ IN
				<foreach item="x_nodeId" index="index" collection="nodeIds"
					open="(" separator="," close=")">
					#{x_nodeId}
                </foreach>
			</if>

			<if test="receiveStatus != null">
				and E.RECEIVESTATUS_ = #{receiveStatus}
            </if>

			<if test="receiveStatusGreaterThanOrEqual != null">
				and E.RECEIVESTATUS_ &gt;=
				#{receiveStatusGreaterThanOrEqual}
            </if>

			<if test="receiveStatusLessThanOrEqual != null">
				and E.RECEIVESTATUS_ &lt;=
				#{receiveStatusLessThanOrEqual}
            </if>

			<if test="mailType != null">
				and E.MAILTYPE_ = #{mailType}
            </if>

			<if test="mailTypes != null and mailTypes.size() &gt; 0">
				and E.MAILTYPE_ IN
				<foreach item="x_mailType" index="index" collection="mailTypes"
					open="(" separator="," close=")">
					#{x_mailType}
                </foreach>
			</if>

			<if test="sendStatus != null">
				and E.SENDSTATUS_ = #{sendStatus}
            </if>

			<if test="sendStatusGreaterThanOrEqual != null">
				and E.SENDSTATUS_ &gt;= #{sendStatusGreaterThanOrEqual}
			</if>

			<if test="sendStatusLessThanOrEqual != null">
				and E.SENDSTATUS_ &lt;= #{sendStatusLessThanOrEqual}
            </if>

			<if test="receiveDateGreaterThanOrEqual != null">
				and E.RECEIVEDATE_ &gt;= #{receiveDateGreaterThanOrEqual}
			</if>

			<if test="receiveDateLessThanOrEqual != null">
				and E.RECEIVEDATE_ &lt;= #{receiveDateLessThanOrEqual}
			</if>

			<if test="lastViewDateGreaterThanOrEqual != null">
				and E.LASTVIEWDATE_ &gt;=
				#{lastViewDateGreaterThanOrEqual}
            </if>

			<if test="lastViewDateLessThanOrEqual != null">
				and E.LASTVIEWDATE_ &lt;= #{lastViewDateLessThanOrEqual}
			</if>

			<if test="mailBCCLike != null">
				and E.MAILBCC_ like #{mailBCCLike}
            </if>

			<if test="mailToLike != null">
				and E.MAILTO_ like #{mailToLike}
            </if>

			<if test="resourceId != null">
				and E.RESOURCEID_ = #{resourceId}
            </if>

			<if test="resourceIds != null and resourceIds.size() &gt; 0">
				and E.RESOURCEID_ IN
				<foreach item="x_resourceId" index="index" collection="resourceIds"
					open="(" separator="," close=")">
					#{x_resourceId}
                </foreach>
			</if>

			<if test="mailBox != null">
				and E.MAILBOX_ = #{mailBox}
            </if>

			<if test="mailBoxs != null and mailBoxs.size() &gt; 0">
				and E.MAILBOX_ IN
				<foreach item="x_mailBox" index="index" collection="mailBoxs"
					open="(" separator="," close=")">
					#{x_mailBox}
                </foreach>
			</if>

			<if test="sendDateGreaterThanOrEqual != null">
				and E.SENDDATE_ &gt;= #{sendDateGreaterThanOrEqual}
            </if>

			<if test="sendDateLessThanOrEqual != null">
				and E.SENDDATE_ &lt;= #{sendDateLessThanOrEqual}
            </if>

			<if test="mailSizeGreaterThanOrEqual != null">
				and E.MAILSIZE_ &gt;= #{mailSizeGreaterThanOrEqual}
            </if>

			<if test="mailSizeLessThanOrEqual != null">
				and E.MAILSIZE_ &lt;= #{mailSizeLessThanOrEqual}
            </if>

			<if test="lastViewIPLike != null">
				and E.LASTVIEWIP_ like #{lastViewIPLike}
            </if>

			<if test="mailFromLike != null">
				and E.MAILFROM_ like #{mailFromLike}
            </if>

			<if test="createBy != null">
				and E.CREATEBY_ = #{createBy}
            </if>

			<if test="createBys != null and createBys.size() &gt; 0">
				and E.CREATEBY_ IN
				<foreach item="x_createBy" index="index" collection="createBys"
					open="(" separator="," close=")">
					#{x_createBy}
                </foreach>
			</if>

			<if test="mailId != null">
				and E.MAILID_ = #{mailId}
            </if>

			<if test="mailIds != null and mailIds.size() &gt; 0">
				and E.MAILID_ IN
				<foreach item="x_mailId" index="index" collection="mailIds"
					open="(" separator="," close=")">
					#{x_mailId}
                </foreach>
			</if>

			<if test="messageId != null">
				and E.MESSAGEID_ = #{messageId}
            </if>

			<if test="messageIds != null and messageIds.size() &gt; 0">
				and E.MESSAGEID_ IN
				<foreach item="x_messageId" index="index" collection="messageIds"
					open="(" separator="," close=")">
					#{x_messageId}
                </foreach>
			</if>

			<if test="status != null">
				and E.STATUS_ = #{status}
            </if>

			<if test="statusGreaterThanOrEqual != null">
				and E.STATUS_ &gt;= #{statusGreaterThanOrEqual}
            </if>

			<if test="statusLessThanOrEqual != null">
				and E.STATUS_ &lt;= #{statusLessThanOrEqual}
            </if>

			<if test="afterCreateDate != null">
				and E.CREATEDATE_ &gt;= #{afterCreateDate}
			</if>

			<if test="beforeCreateDate != null">
				and E.CREATEDATE_ &lt;= #{beforeCreateDate}
            </if>
            
		</where>
	</sql>

</mapper>