<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.batch.mapper.JobDefinitionMapper">

	<resultMap id="jobDefinitionResultMap" type="com.glaf.batch.domain.JobDefinition">
		<id property="jobDefinitionId" column="JOB_DEFINITION_ID" jdbcType="BIGINT" />
		<result property="jobKey" column="JOB_KEY" jdbcType="VARCHAR" />
		<result property="jobName" column="JOB_NAME" jdbcType="VARCHAR" />
		<result property="createBy" column="CREATEBY" jdbcType="VARCHAR" />
		<result property="createTime" column="CREATETIME" jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertJobDefinition" parameterType="com.glaf.batch.domain.JobDefinition">
		insert into JOB_DEF
		<trim prefix="(" suffix=")" suffixOverrides=",">
			JOB_DEFINITION_ID
			<if test="jobKey != null">
				,JOB_KEY
			</if>
			<if test="jobName != null">
				,JOB_NAME
			</if>
			<if test="createBy != null">
				,CREATEBY
			</if>
			<if test="createTime != null">
				,CREATETIME
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{jobDefinitionId, jdbcType=BIGINT}

			<if test="jobKey != null">
				,#{jobKey, jdbcType=VARCHAR}
			</if>
			<if test="jobName != null">
				,#{jobName, jdbcType=VARCHAR}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<update id="updateJobDefinition" parameterType="com.glaf.batch.domain.JobDefinition">
		update JOB_DEF
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="jobKey != null">
				JOB_KEY = #{jobKey, jdbcType=VARCHAR},
			</if>
			<if test="jobName != null">
				JOB_NAME = #{jobName, jdbcType=VARCHAR},
			</if>
			<if test="createBy != null">
				CREATEBY = #{createBy, jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				CREATETIME = #{createTime, jdbcType=TIMESTAMP},
			</if>
		</trim>
		where
		JOB_DEFINITION_ID = #{jobDefinitionId, jdbcType=BIGINT}

	</update>


	<delete id="deleteJobDefinitionById" parameterType="long">
		delete from
		JOB_DEF
		where JOB_DEFINITION_ID = #{id}
	</delete>


	<select id="getJobDefinitionById" parameterType="long"
		resultMap="jobDefinitionResultMap">
		select * from JOB_DEF where JOB_DEFINITION_ID = #{id}
	</select>


	<select id="getJobDefinitions" parameterType="com.glaf.batch.query.JobDefinitionQuery"
		resultMap="jobDefinitionResultMap">
		select distinct E.*
		<include refid="selectJobDefinitionsSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.JOB_DEFINITION_ID desc
			</otherwise>
		</choose>
	</select>


	<select id="getJobDefinitionCount" parameterType="com.glaf.batch.query.JobDefinitionQuery"
		resultType="int">
		select count(*)
		<include refid="selectJobDefinitionsSql" />
	</select>


	<sql id="selectJobDefinitionsSql">

		from JOB_DEF E

		<where>
			1 = 1

			<if test="jobKey != null and jobKey != '' ">
				and E.JOB_KEY = #{jobKey}
			</if>

			<if test="jobKeys != null and jobKeys.size != 0">
				and E.JOB_KEY IN
				<foreach item="x_jobKey" index="index" collection="jobKeys"
					open="(" separator="," close=")">
					#{x_jobKey}
				</foreach>
			</if>

			<if test="jobName != null and jobName != '' ">
				and E.JOB_NAME = #{jobName}
			</if>

			<if test="jobNames != null and jobNames.size != 0">
				and E.JOB_NAME IN
				<foreach item="x_jobName" index="index" collection="jobNames"
					open="(" separator="," close=")">
					#{x_jobName}
				</foreach>
			</if>

			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY = #{createBy}
			</if>

			<if test="createBys != null and createBys.size != 0">
				and E.CREATEBY IN
				<foreach item="x_createBy" index="index" collection="createBys"
					open="(" separator="," close=")">
					#{x_createBy}
				</foreach>
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME &gt;= #{createTimeGreaterThanOrEqual}
			</if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME &lt;= #{createTimeLessThanOrEqual}
			</if>

		</where>
	</sql>

</mapper>