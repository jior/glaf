<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                                     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
										 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
										 http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
										 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


	<aop:config expose-proxy="true">
		<!-- 只对业务逻辑层实施事务 -->
		<aop:pointcut id="txPointcut" expression="execution(* com.glaf..service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>


	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="export*" read-only="true" />
			<tx:method name="search*" read-only="true" />
			<tx:method name="print*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<aop:aspectj-autoproxy expose-proxy="true"
		proxy-target-class="true" />

	<context:annotation-config />

	<context:component-scan base-package="com.glaf" />


	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSourceC3P0Adapter"
	destroy-method="close">
		<property name="driverClass" value="org.h2.Driver" />
		<property name="jdbcUrl" value="jdbc:h2:tcp://localhost/glafdb" />
		<property name="user" value="sa" />
		<property name="password" value="" />
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="50" />
		<property name="maxIdleTime" value="5000" />
		<property name="acquireIncrement" value="2" />
		<property name="maxStatements" value="100" />
		<property name="idleConnectionTestPeriod" value="3000" />
	</bean>


	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="environment" value="default" />
		<property name="configLocation" value="classpath:resources/mybatis/mybatis.conf.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:resources/mybatis/mapper/**/*Mapper.xml
				</value>
			</list>
		</property>
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean id="baseMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"
		abstract="true" lazy-init="true">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<bean id="baseMapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="basePackage" value="com.glaf.**.mapper" />
	</bean>

	<bean id="myBatisEntityDAO" class="com.glaf.core.entity.mybatis.MyBatisEntityDAOImpl">
		<property name="sqlSessionTemplate" ref="sqlSession" />
	</bean>

	<bean id="myBatisDbIdGenerator" class="com.glaf.core.id.MyBatisDbIdGenerator">
		<property name="entityDAO" ref="myBatisEntityDAO" />
	</bean>

	<bean id="idGenerator" class="com.glaf.core.id.MyBatisDbIdGenerator">
		<property name="entityDAO" ref="myBatisEntityDAO" />
	</bean>

	<bean id="myBatisDbLongIdGenerator" class="com.glaf.core.id.MyBatisDbLongIdGenerator">
		<property name="entityDAO" ref="myBatisEntityDAO" />
	</bean>

	<bean id="longIdGenerator" class="com.glaf.core.id.MyBatisDbLongIdGenerator">
		<property name="entityDAO" ref="myBatisEntityDAO" />
	</bean>

	<bean id="myBatisEntityService" class="com.glaf.core.entity.mybatis.MyBatisEntityService">
		<property name="entityDAO" ref="myBatisEntityDAO" />
	</bean>

	<bean id="entityService" class="com.glaf.core.entity.mybatis.MyBatisEntityService">
		<property name="entityDAO" ref="myBatisEntityDAO" />
	</bean>

</beans>