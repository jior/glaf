<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.mail.mapper.MailStorageMapper">

	<resultMap id="mailStorageResultMap" type="com.glaf.mail.domain.MailStorage">
		<id property="id" column="ID_" jdbcType="VARCHAR" />
		<result property="subject" column="SUBJECT_" jdbcType="VARCHAR" />
		<result property="dataSpace" column="DATASPACE_" jdbcType="VARCHAR" />
		<result property="dataTable" column="DATATABLE_" jdbcType="VARCHAR" />
		<result property="storageType" column="STORAGETYPE_" jdbcType="VARCHAR" />
		<result property="host" column="HOST_" jdbcType="VARCHAR" />
		<result property="port" column="PORT_" jdbcType="INTEGER" />
		<result property="username" column="USERNAME_" jdbcType="VARCHAR" />
		<result property="password" column="PASSWORD_" jdbcType="VARCHAR" />
		<result property="status" column="STATUS_" jdbcType="INTEGER" />
		<result property="createBy" column="CREATEBY_" jdbcType="VARCHAR" />
		<result property="createDate" column="CREATEDATE_" jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertMailStorage" parameterType="com.glaf.mail.domain.MailStorage">
		insert into
		SYS_MAIL_STORAGE ( ID_
		,SUBJECT_
		,DATASPACE_
		,DATATABLE_
		,STORAGETYPE_
		,HOST_
		,PORT_
		,USERNAME_
		,PASSWORD_
		,STATUS_
		,CREATEBY_
		,CREATEDATE_
		)
		values (
		#{id, jdbcType=VARCHAR}
		,#{subject, jdbcType=VARCHAR}
		,#{dataSpace, jdbcType=VARCHAR}
		,#{dataTable, jdbcType=VARCHAR}
		,#{storageType, jdbcType=VARCHAR}
		,#{host, jdbcType=VARCHAR}
		,#{port, jdbcType=INTEGER}
		,#{username, jdbcType=VARCHAR}
		,#{password, jdbcType=VARCHAR}
		,#{status, jdbcType=INTEGER}
		,#{createBy, jdbcType=VARCHAR}
		,#{createDate, jdbcType=TIMESTAMP}
		)
	</insert>


	<update id="updateMailStorage" parameterType="com.glaf.mail.domain.MailStorage">
		update
		SYS_MAIL_STORAGE
		set
		SUBJECT_ = #{subject, jdbcType=VARCHAR},
		HOST_ = #{host, jdbcType=VARCHAR},
		PORT_ = #{port, jdbcType=INTEGER},
		USERNAME_ = #{username, jdbcType=VARCHAR},
		PASSWORD_ = #{password, jdbcType=VARCHAR},
		STATUS_ = #{status, jdbcType=INTEGER}
		where
		ID_ = #{id, jdbcType=VARCHAR}

	</update>


	<delete id="deleteMailStorageById" parameterType="string">
		delete from
		SYS_MAIL_STORAGE
		where ID_ = #{id}
	</delete>

	<delete id="deleteMailStorages" parameterType="com.glaf.mail.query.MailStorageQuery">
		delete from SYS_MAIL_STORAGE
		where (
		ID_ IN
		<foreach item="x_rowId" index="index" collection="rowIds"
			open="(" separator="," close=")">
			#{x_rowId}
		</foreach>
		)
	</delete>

	<select id="getMailStorageById" parameterType="string"
		resultMap="mailStorageResultMap">
		select * from SYS_MAIL_STORAGE where ID_ = #{id}
	</select>

	<select id="getMailStorageByDataTable" parameterType="string"
		resultMap="mailStorageResultMap">
		select * from SYS_MAIL_STORAGE where DATATABLE_ =
		#{dataTable}
	</select>

	<select id="getMailStorages" parameterType="com.glaf.mail.query.MailStorageQuery"
		resultMap="mailStorageResultMap">
		select E.*
		<include refid="selectMailStoragesSql" />
		<if test="orderBy != null">
			order by ${orderBy}
		</if>
	</select>

	<select id="getMailStorageCount" parameterType="com.glaf.mail.query.MailStorageQuery"
		resultType="int">
		select count(*)
		<include refid="selectMailStoragesSql" />
	</select>

	<sql id="selectMailStoragesSql">

		from SYS_MAIL_STORAGE E

		<where>
			1 = 1

			<if test="subjectLike != null and subjectLike != '' ">
				and E.SUBJECT_ like #{subjectLike}
			</if>

			<if test="storageType != null and storageType != '' ">
				and E.STORAGETYPE_ = #{storageType}
			</if>

			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY_ = #{createBy}
			</if>

			<if test="createDateGreaterThanOrEqual != null">
				and E.CREATEDATE_ &gt;= #{createDateGreaterThanOrEqual}
			</if>

			<if test="createDateLessThanOrEqual != null">
				and E.CREATEDATE_ &lt;= #{createDateLessThanOrEqual}
			</if>

		</where>
	</sql>

</mapper>