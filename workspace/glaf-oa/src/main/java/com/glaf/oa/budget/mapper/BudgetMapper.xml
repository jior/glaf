<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.oa.budget.mapper.BudgetMapper">

	<resultMap id="budgetResultMap" type="com.glaf.oa.budget.model.Budget">
		<id property="budgetid" column="budgetid" jdbcType="BIGINT" />
		<result property="budgetno" column="budgetno" jdbcType="VARCHAR" />
		<result property="area" column="area" jdbcType="VARCHAR" />
		<result property="company" column="company" jdbcType="VARCHAR" />
		<result property="dept" column="dept" jdbcType="VARCHAR" />
		<result property="post" column="post" jdbcType="VARCHAR" />
		<result property="appuser" column="appuser" jdbcType="VARCHAR" />
		<result property="appdate" column="appdate" jdbcType="TIMESTAMP" />
		<result property="proname" column="proname" jdbcType="VARCHAR" />
		<result property="budgetsum" column="budgetsum" jdbcType="DOUBLE" />
		<result property="currency" column="currency" jdbcType="VARCHAR" />
		<result property="paymentmodel" column="paymentmodel" jdbcType="INTEGER" />
		<result property="paymenttype" column="paymenttype" jdbcType="INTEGER" />
		<result property="supname" column="supname" jdbcType="VARCHAR" />
		<result property="supaccount" column="supaccount" jdbcType="VARCHAR" />
		<result property="supbank" column="supbank" jdbcType="VARCHAR" />
		<result property="supaddress" column="supaddress" jdbcType="VARCHAR" />
		<result property="attachment" column="attachment" jdbcType="VARCHAR" />
		<result property="status" column="status" jdbcType="INTEGER" />
		<result property="processname" column="processname" jdbcType="VARCHAR" />
		<result property="processinstanceid" column="processinstanceid"
			jdbcType="DOUBLE" />
		<result property="wfstatus" column="wfstatus" jdbcType="DOUBLE" />
		<result property="brands1" column="brands1" jdbcType="VARCHAR" />
		<result property="brands1account" column="brands1account"
			jdbcType="DOUBLE" />
		<result property="brands2" column="brands2" jdbcType="VARCHAR" />
		<result property="brands2account" column="brands2account"
			jdbcType="DOUBLE" />
		<result property="brands3" column="brands3" jdbcType="VARCHAR" />
		<result property="brands3account" column="brands3account"
			jdbcType="DOUBLE" />
		<result property="paymentdate" column="paymentdate" jdbcType="TIMESTAMP" />
		<result property="remark" column="remark" jdbcType="VARCHAR" />
		<result property="createBy" column="createBy" jdbcType="VARCHAR" />
		<result property="createDate" column="createDate" jdbcType="TIMESTAMP" />
		<result property="updateDate" column="updateDate" jdbcType="TIMESTAMP" />
		<result property="updateBy" column="updateBy" jdbcType="VARCHAR" />
	</resultMap>


	<insert id="insertBudget" parameterType="com.glaf.oa.budget.model.Budget">
		insert into oa_budget
		<trim prefix="(" suffix=")" suffixOverrides=",">
			budgetid
			<if test="budgetno != null">
				,budgetno 
			</if>
			<if test="area != null">
				,area 
			</if>
			<if test="company != null">
				,company 
			</if>
			<if test="dept != null">
				,dept 
			</if>
			<if test="post != null">
				,post 
			</if>
			<if test="appuser != null">
				,appuser 
			</if>
			<if test="appdate != null">
				,appdate 
			</if>
			<if test="proname != null">
				,proname 
			</if>
			<if test="procontent != null">
				,procontent 
			</if>
			<if test="budgetsum != null">
				,budgetsum 
			</if>
			<if test="currency != null">
				,currency 
			</if>
			<if test="paymentmodel != null">
				,paymentmodel 
			</if>
			<if test="paymenttype != null">
				,paymenttype 
			</if>
			<if test="supname != null">
				,supname 
			</if>
			<if test="supaccount != null">
				,supaccount 
			</if>
			<if test="supbank != null">
				,supbank 
			</if>
			<if test="supaddress != null">
				,supaddress 
			</if>
			<if test="attachment != null">
				,attachment 
			</if>
			<if test="status != null">
				,status 
			</if>
			<if test="processname != null">
				,processname 
			</if>
			<if test="processinstanceid != null">
				,processinstanceid 
			</if>
			<if test="wfstatus != null">
				,wfstatus 
			</if>
			<if test="brands1 != null">
				,brands1 
			</if>
			<if test="brands1account != null">
				,brands1account 
			</if>
			<if test="brands2 != null">
				,brands2 
			</if>
			<if test="brands2account != null">
				,brands2account 
			</if>
			<if test="brands3 != null">
				,brands3 
			</if>
			<if test="brands3account != null">
				,brands3account 
			</if>
			<if test="paymentdate != null">
				,paymentdate 
			</if>
			<if test="remark != null">
				,remark 
			</if>
			<if test="createBy != null">
				,createBy 
			</if>
			<if test="createDate != null">
				,createDate 
			</if>
			<if test="updateDate != null">
				,updateDate 
			</if>
			<if test="updateBy != null">
				,updateBy 
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{budgetid, jdbcType=BIGINT}

			<if test="budgetno != null">
				,#{budgetno, jdbcType=VARCHAR}
			</if>
			<if test="area != null">
				,#{area, jdbcType=VARCHAR}
			</if>
			<if test="company != null">
				,#{company, jdbcType=VARCHAR}
			</if>
			<if test="dept != null">
				,#{dept, jdbcType=VARCHAR}
			</if>
			<if test="post != null">
				,#{post, jdbcType=VARCHAR}
			</if>
			<if test="appuser != null">
				,#{appuser, jdbcType=VARCHAR}
			</if>
			<if test="appdate != null">
				,#{appdate, jdbcType=TIMESTAMP}
			</if>
			<if test="proname != null">
				,#{proname, jdbcType=VARCHAR}
			</if>
			<if test="procontent != null">
				,#{procontent, jdbcType=VARCHAR}
			</if>
			<if test="budgetsum != null">
				,#{budgetsum, jdbcType=DOUBLE}
			</if>
			<if test="currency != null">
				,#{currency, jdbcType=VARCHAR}
			</if>
			<if test="paymentmodel != null">
				,#{paymentmodel, jdbcType=INTEGER}
			</if>
			<if test="paymenttype != null">
				,#{paymenttype, jdbcType=INTEGER}
			</if>
			<if test="supname != null">
				,#{supname, jdbcType=VARCHAR}
			</if>
			<if test="supaccount != null">
				,#{supaccount, jdbcType=VARCHAR}
			</if>
			<if test="supbank != null">
				,#{supbank, jdbcType=VARCHAR}
			</if>
			<if test="supaddress != null">
				,#{supaddress, jdbcType=VARCHAR}
			</if>
			<if test="attachment != null">
				,#{attachment, jdbcType=VARCHAR}
			</if>
			<if test="status != null">
				,#{status, jdbcType=INTEGER}
			</if>
			<if test="processname != null">
				,#{processname, jdbcType=VARCHAR}
			</if>
			<if test="processinstanceid != null">
				,#{processinstanceid, jdbcType=DOUBLE}
			</if>
			<if test="wfstatus != null">
				,#{wfstatus, jdbcType=DOUBLE}
			</if>
			<if test="brands1 != null">
				,#{brands1, jdbcType=VARCHAR}
			</if>
			<if test="brands1account != null">
				,#{brands1account, jdbcType=DOUBLE}
			</if>
			<if test="brands2 != null">
				,#{brands2, jdbcType=VARCHAR}
			</if>
			<if test="brands2account != null">
				,#{brands2account, jdbcType=DOUBLE}
			</if>
			<if test="brands3 != null">
				,#{brands3, jdbcType=VARCHAR}
			</if>
			<if test="brands3account != null">
				,#{brands3account, jdbcType=DOUBLE}
			</if>
			<if test="paymentdate != null">
				,#{paymentdate, jdbcType=TIMESTAMP}
			</if>
			<if test="remark != null">
				,#{remark, jdbcType=VARCHAR}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createDate != null">
				,#{createDate, jdbcType=TIMESTAMP}
			</if>
			<if test="updateDate != null">
				,#{updateDate, jdbcType=TIMESTAMP}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
		</trim>
	</insert>


	<update id="updateBudget" parameterType="com.glaf.oa.budget.model.Budget">
		update oa_budget
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="budgetno != null">
				budgetno = #{budgetno, jdbcType=VARCHAR},
			</if>
			<if test="area != null">
				area = #{area, jdbcType=VARCHAR},
			</if>
			<if test="company != null">
				company = #{company, jdbcType=VARCHAR},
			</if>
			<if test="dept != null">
				dept = #{dept, jdbcType=VARCHAR},
			</if>
			<if test="post != null">
				post = #{post, jdbcType=VARCHAR},
			</if>
			<if test="appuser != null">
				appuser = #{appuser, jdbcType=VARCHAR},
			</if>
			<if test="appdate != null">
				appdate = #{appdate, jdbcType=TIMESTAMP},
			</if>
			<if test="proname != null">
				proname = #{proname, jdbcType=VARCHAR},
			</if>
			<if test="procontent != null">
				procontent = #{procontent, jdbcType=VARCHAR},
			</if>
			<if test="budgetsum != null">
				budgetsum = #{budgetsum, jdbcType=DOUBLE},
			</if>
			<if test="currency != null">
				currency = #{currency, jdbcType=VARCHAR},
			</if>
			<if test="paymentmodel != null">
				paymentmodel = #{paymentmodel, jdbcType=INTEGER},
			</if>
			<if test="paymenttype != null">
				paymenttype = #{paymenttype, jdbcType=INTEGER},
			</if>
			<if test="supname != null">
				supname = #{supname, jdbcType=VARCHAR},
			</if>
			<if test="supaccount != null">
				supaccount = #{supaccount, jdbcType=VARCHAR},
			</if>
			<if test="supbank != null">
				supbank = #{supbank, jdbcType=VARCHAR},
			</if>
			<if test="supaddress != null">
				supaddress = #{supaddress, jdbcType=VARCHAR},
			</if>
			<if test="attachment != null">
				attachment = #{attachment, jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status, jdbcType=INTEGER},
			</if>
			<if test="processname != null">
				processname = #{processname, jdbcType=VARCHAR},
			</if>
			<if test="processinstanceid != null">
				processinstanceid = #{processinstanceid,
				jdbcType=DOUBLE},
			</if>
			<if test="wfstatus != null">
				wfstatus = #{wfstatus, jdbcType=DOUBLE},
			</if>
			<if test="brands1 != null">
				brands1 = #{brands1, jdbcType=VARCHAR},
			</if>
			<if test="brands1account != null">
				brands1account = #{brands1account, jdbcType=DOUBLE},
			</if>
			<if test="brands2 != null">
				brands2 = #{brands2, jdbcType=VARCHAR},
			</if>
			<if test="brands2account != null">
				brands2account = #{brands2account, jdbcType=DOUBLE},
			</if>
			<if test="brands3 != null">
				brands3 = #{brands3, jdbcType=VARCHAR},
			</if>
			<if test="brands3account != null">
				brands3account = #{brands3account, jdbcType=DOUBLE},
			</if>
			<if test="paymentdate != null">
				paymentdate = #{paymentdate, jdbcType=TIMESTAMP},
			</if>
			<if test="remark != null">
				remark = #{remark, jdbcType=VARCHAR},
			</if>
			<if test="createBy != null">
				createBy = #{createBy, jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				createDate = #{createDate, jdbcType=TIMESTAMP},
			</if>
			<if test="updateDate != null">
				updateDate = #{updateDate, jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				updateBy = #{updateBy, jdbcType=VARCHAR},
			</if>
		</trim>
		where
		budgetid = #{budgetid, jdbcType=BIGINT}

	</update>


	<delete id="deleteBudgetById" parameterType="long">
		delete from oa_budget
		where budgetid = #{id}
	</delete>


	<delete id="deleteBudgets" parameterType="com.glaf.oa.budget.query.BudgetQuery">
		delete from oa_budget
		where (
		budgetid IN
		<foreach item="x_budgetid" index="index" collection="budgetids"
			open="(" separator="," close=")">
			#{x_budgetid}
              </foreach>
		)
	</delete>


	<select id="getBudgetById" parameterType="long" resultMap="budgetResultMap">
		select * from oa_budget where budgetid = #{id}
	</select>


	<select id="getBudgets" parameterType="com.glaf.oa.budget.query.BudgetQuery"
		resultMap="budgetResultMap">
		select E.*
		<include refid="selectBudgetsSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
          </when>
			<otherwise>
				order by E.budgetid desc
		  </otherwise>
		</choose>
	</select>


	<select id="getBudgetCount" parameterType="com.glaf.oa.budget.query.BudgetQuery"
		resultType="int">
		select count(*)
		<include refid="selectBudgetsSql" />
	</select>


	<sql id="selectBudgetsSql">

		from oa_budget E


		<where>
			1 = 1


			<if test="budgetno != null and budgetno != '' ">
				and E.budgetno = #{budgetno}
            </if>

			<if test="budgetnoLike != null and budgetnoLike != '' ">
				and E.budgetno like #{budgetnoLike}
            </if>

			<if test="budgetnos != null and budgetnos.size() &gt; 0">
				and E.budgetno IN
				<foreach item="x_budgetno" index="index" collection="budgetnos"
					open="(" separator="," close=")">
					#{x_budgetno}
                </foreach>
			</if>

			<if test="area != null and area != '' ">
				and E.area = #{area}
            </if>

			<if test="areaLike != null and areaLike != '' ">
				and E.area like #{areaLike}
            </if>

			<if test="areas != null and areas.size() &gt; 0">
				and E.area IN
				<foreach item="x_area" index="index" collection="areas"
					open="(" separator="," close=")">
					#{x_area}
                </foreach>
			</if>

			<if test="company != null and company != '' ">
				and E.company = #{company}
            </if>

			<if test="companyLike != null and companyLike != '' ">
				and E.company like #{companyLike}
            </if>

			<if test="companys != null and companys.size() &gt; 0">
				and E.company IN
				<foreach item="x_company" index="index" collection="companys"
					open="(" separator="," close=")">
					#{x_company}
                </foreach>
			</if>

			<if test="dept != null and dept != '' ">
				and E.dept = #{dept}
            </if>

			<if test="deptLike != null and deptLike != '' ">
				and E.dept like #{deptLike}
            </if>

			<if test="depts != null and depts.size() &gt; 0">
				and E.dept IN
				<foreach item="x_dept" index="index" collection="depts"
					open="(" separator="," close=")">
					#{x_dept}
                </foreach>
			</if>

			<if test="post != null and post != '' ">
				and E.post = #{post}
            </if>

			<if test="postLike != null and postLike != '' ">
				and E.post like #{postLike}
            </if>

			<if test="posts != null and posts.size() &gt; 0">
				and E.post IN
				<foreach item="x_post" index="index" collection="posts"
					open="(" separator="," close=")">
					#{x_post}
                </foreach>
			</if>

			<if test="appuser != null and appuser != '' ">
				and E.appuser = #{appuser}
            </if>

			<if test="appuserLike != null and appuserLike != '' ">
				and E.appuser like #{appuserLike}
            </if>

			<if test="appusers != null and appusers.size() &gt; 0">
				and E.appuser IN
				<foreach item="x_appuser" index="index" collection="appusers"
					open="(" separator="," close=")">
					#{x_appuser}
                </foreach>
			</if>

			<if test="appdate != null">
				and E.appdate = #{appdate}
            </if>

			<if test="appdateGreaterThanOrEqual != null">
				and E.appdate &gt;= #{appdateGreaterThanOrEqual}
            </if>

			<if test="appdateLessThanOrEqual != null">
				and E.appdate &lt;= #{appdateLessThanOrEqual}
            </if>

			<if test="appdates != null and appdates.size() &gt; 0">
				and E.appdate IN
				<foreach item="x_appdate" index="index" collection="appdates"
					open="(" separator="," close=")">
					#{x_appdate}
                </foreach>
			</if>


			<if test="proname != null and proname != '' ">
				and E.proname = #{proname}
            </if>

			<if test="pronameLike != null and pronameLike != '' ">
				and E.proname like #{pronameLike}
            </if>

			<if test="pronames != null and pronames.size() &gt; 0">
				and E.proname IN
				<foreach item="x_proname" index="index" collection="pronames"
					open="(" separator="," close=")">
					#{x_proname}
                </foreach>
			</if>

			<if test="budgetsum != null">
				and E.budgetsum = #{budgetsum}
            </if>

			<if test="budgetsumGreaterThanOrEqual != null">
				and E.budgetsum &gt;= #{budgetsumGreaterThanOrEqual}
            </if>

			<if test="budgetsumLessThanOrEqual != null">
				and E.budgetsum &lt;= #{budgetsumLessThanOrEqual}
            </if>

			<if test="budgetsums != null and budgetsums.size() &gt; 0">
				and E.budgetsum IN
				<foreach item="x_budgetsum" index="index" collection="budgetsums"
					open="(" separator="," close=")">
					#{x_budgetsum}
                </foreach>
			</if>


			<if test="currency != null and currency != '' ">
				and E.currency = #{currency}
            </if>

			<if test="currencyLike != null and currencyLike != '' ">
				and E.currency like #{currencyLike}
            </if>

			<if test="currencys != null and currencys.size() &gt; 0">
				and E.currency IN
				<foreach item="x_currency" index="index" collection="currencys"
					open="(" separator="," close=")">
					#{x_currency}
                </foreach>
			</if>

			<if test="paymentmodel != null">
				and E.paymentmodel = #{paymentmodel}
            </if>

			<if test="paymentmodelGreaterThanOrEqual != null">
				and E.paymentmodel &gt;=
				#{paymentmodelGreaterThanOrEqual}
            </if>

			<if test="paymentmodelLessThanOrEqual != null">
				and E.paymentmodel &lt;= #{paymentmodelLessThanOrEqual}
			</if>

			<if test="paymentmodels != null and paymentmodels.size() &gt; 0">
				and E.paymentmodel IN
				<foreach item="x_paymentmodel" index="index" collection="paymentmodels"
					open="(" separator="," close=")">
					#{x_paymentmodel}
                </foreach>
			</if>


			<if test="paymenttype != null">
				and E.paymenttype = #{paymenttype}
            </if>

			<if test="paymenttypeGreaterThanOrEqual != null">
				and E.paymenttype &gt;= #{paymenttypeGreaterThanOrEqual}
			</if>

			<if test="paymenttypeLessThanOrEqual != null">
				and E.paymenttype &lt;= #{paymenttypeLessThanOrEqual}
			</if>

			<if test="paymenttypes != null and paymenttypes.size() &gt; 0">
				and E.paymenttype IN
				<foreach item="x_paymenttype" index="index" collection="paymenttypes"
					open="(" separator="," close=")">
					#{x_paymenttype}
                </foreach>
			</if>


			<if test="supname != null and supname != '' ">
				and E.supname = #{supname}
            </if>

			<if test="supnameLike != null and supnameLike != '' ">
				and E.supname like #{supnameLike}
            </if>

			<if test="supnames != null and supnames.size() &gt; 0">
				and E.supname IN
				<foreach item="x_supname" index="index" collection="supnames"
					open="(" separator="," close=")">
					#{x_supname}
                </foreach>
			</if>

			<if test="supaccount != null and supaccount != '' ">
				and E.supaccount = #{supaccount}
            </if>

			<if test="supaccountLike != null and supaccountLike != '' ">
				and E.supaccount like #{supaccountLike}
            </if>

			<if test="supaccounts != null and supaccounts.size() &gt; 0">
				and E.supaccount IN
				<foreach item="x_supaccount" index="index" collection="supaccounts"
					open="(" separator="," close=")">
					#{x_supaccount}
                </foreach>
			</if>

			<if test="supbank != null and supbank != '' ">
				and E.supbank = #{supbank}
            </if>

			<if test="supbankLike != null and supbankLike != '' ">
				and E.supbank like #{supbankLike}
            </if>

			<if test="supbanks != null and supbanks.size() &gt; 0">
				and E.supbank IN
				<foreach item="x_supbank" index="index" collection="supbanks"
					open="(" separator="," close=")">
					#{x_supbank}
                </foreach>
			</if>

			<if test="supaddress != null and supaddress != '' ">
				and E.supaddress = #{supaddress}
            </if>

			<if test="supaddressLike != null and supaddressLike != '' ">
				and E.supaddress like #{supaddressLike}
            </if>

			<if test="supaddresss != null and supaddresss.size() &gt; 0">
				and E.supaddress IN
				<foreach item="x_supaddress" index="index" collection="supaddresss"
					open="(" separator="," close=")">
					#{x_supaddress}
                </foreach>
			</if>

			<if test="attachment != null and attachment != '' ">
				and E.attachment = #{attachment}
            </if>

			<if test="attachmentLike != null and attachmentLike != '' ">
				and E.attachment like #{attachmentLike}
            </if>

			<if test="attachments != null and attachments.size() &gt; 0">
				and E.attachment IN
				<foreach item="x_attachment" index="index" collection="attachments"
					open="(" separator="," close=")">
					#{x_attachment}
                </foreach>
			</if>

			<if test="status != null">
				and E.status = #{status}
            </if>

			<if test="statusGreaterThanOrEqual != null">
				and E.status &gt;= #{statusGreaterThanOrEqual}
            </if>

			<if test="statusLessThanOrEqual != null">
				and E.status &lt;= #{statusLessThanOrEqual}
            </if>

			<if test="statuss != null and statuss.size() &gt; 0">
				and E.status IN
				<foreach item="x_status" index="index" collection="statuss"
					open="(" separator="," close=")">
					#{x_status}
                </foreach>
			</if>


			<if test="processname != null and processname != '' ">
				and E.processname = #{processname}
            </if>

			<if test="processnameLike != null and processnameLike != '' ">
				and E.processname like #{processnameLike}
            </if>

			<if test="processnames != null and processnames.size() &gt; 0">
				and E.processname IN
				<foreach item="x_processname" index="index" collection="processnames"
					open="(" separator="," close=")">
					#{x_processname}
                </foreach>
			</if>

			<if test="processinstanceid != null">
				and E.processinstanceid = #{processinstanceid}
            </if>

			<if test="processinstanceidGreaterThanOrEqual != null">
				and E.processinstanceid &gt;=
				#{processinstanceidGreaterThanOrEqual}
            </if>

			<if test="processinstanceidLessThanOrEqual != null">
				and E.processinstanceid &lt;=
				#{processinstanceidLessThanOrEqual}
            </if>

			<if test="processinstanceids != null and processinstanceids.size() &gt; 0">
				and E.processinstanceid IN
				<foreach item="x_processinstanceid" index="index"
					collection="processinstanceids" open="(" separator="," close=")">
					#{x_processinstanceid}
                </foreach>
			</if>


			<if test="wfstatus != null">
				and E.wfstatus = #{wfstatus}
            </if>

			<if test="wfstatusGreaterThanOrEqual != null">
				and E.wfstatus &gt;= #{wfstatusGreaterThanOrEqual}
            </if>

			<if test="wfstatusLessThanOrEqual != null">
				and E.wfstatus &lt;= #{wfstatusLessThanOrEqual}
            </if>

			<if test="wfstatuss != null and wfstatuss.size() &gt; 0">
				and E.wfstatus IN
				<foreach item="x_wfstatus" index="index" collection="wfstatuss"
					open="(" separator="," close=")">
					#{x_wfstatus}
                </foreach>
			</if>


			<if test="brands1 != null and brands1 != '' ">
				and E.brands1 = #{brands1}
            </if>

			<if test="brands1Like != null and brands1Like != '' ">
				and E.brands1 like #{brands1Like}
            </if>

			<if test="brands1s != null and brands1s.size() &gt; 0">
				and E.brands1 IN
				<foreach item="x_brands1" index="index" collection="brands1s"
					open="(" separator="," close=")">
					#{x_brands1}
                </foreach>
			</if>

			<if test="brands1account != null">
				and E.brands1account = #{brands1account}
            </if>

			<if test="brands1accountGreaterThanOrEqual != null">
				and E.brands1account &gt;=
				#{brands1accountGreaterThanOrEqual}
            </if>

			<if test="brands1accountLessThanOrEqual != null">
				and E.brands1account &lt;=
				#{brands1accountLessThanOrEqual}
            </if>

			<if test="brands1accounts != null and brands1accounts.size() &gt; 0">
				and E.brands1account IN
				<foreach item="x_brands1account" index="index" collection="brands1accounts"
					open="(" separator="," close=")">
					#{x_brands1account}
                </foreach>
			</if>


			<if test="brands2 != null and brands2 != '' ">
				and E.brands2 = #{brands2}
            </if>

			<if test="brands2Like != null and brands2Like != '' ">
				and E.brands2 like #{brands2Like}
            </if>

			<if test="brands2s != null and brands2s.size() &gt; 0">
				and E.brands2 IN
				<foreach item="x_brands2" index="index" collection="brands2s"
					open="(" separator="," close=")">
					#{x_brands2}
                </foreach>
			</if>

			<if test="brands2account != null">
				and E.brands2account = #{brands2account}
            </if>

			<if test="brands2accountGreaterThanOrEqual != null">
				and E.brands2account &gt;=
				#{brands2accountGreaterThanOrEqual}
            </if>

			<if test="brands2accountLessThanOrEqual != null">
				and E.brands2account &lt;=
				#{brands2accountLessThanOrEqual}
            </if>

			<if test="brands2accounts != null and brands2accounts.size() &gt; 0">
				and E.brands2account IN
				<foreach item="x_brands2account" index="index" collection="brands2accounts"
					open="(" separator="," close=")">
					#{x_brands2account}
                </foreach>
			</if>


			<if test="brands3 != null and brands3 != '' ">
				and E.brands3 = #{brands3}
            </if>

			<if test="brands3Like != null and brands3Like != '' ">
				and E.brands3 like #{brands3Like}
            </if>

			<if test="brands3s != null and brands3s.size() &gt; 0">
				and E.brands3 IN
				<foreach item="x_brands3" index="index" collection="brands3s"
					open="(" separator="," close=")">
					#{x_brands3}
                </foreach>
			</if>

			<if test="brands3account != null">
				and E.brands3account = #{brands3account}
            </if>

			<if test="brands3accountGreaterThanOrEqual != null">
				and E.brands3account &gt;=
				#{brands3accountGreaterThanOrEqual}
            </if>

			<if test="brands3accountLessThanOrEqual != null">
				and E.brands3account &lt;=
				#{brands3accountLessThanOrEqual}
            </if>

			<if test="brands3accounts != null and brands3accounts.size() &gt; 0">
				and E.brands3account IN
				<foreach item="x_brands3account" index="index" collection="brands3accounts"
					open="(" separator="," close=")">
					#{x_brands3account}
                </foreach>
			</if>


			<if test="paymentdate != null">
				and E.paymentdate = #{paymentdate}
            </if>

			<if test="paymentdateGreaterThanOrEqual != null">
				and E.paymentdate &gt;= #{paymentdateGreaterThanOrEqual}
			</if>

			<if test="paymentdateLessThanOrEqual != null">
				and E.paymentdate &lt;= #{paymentdateLessThanOrEqual}
			</if>

			<if test="paymentdates != null and paymentdates.size() &gt; 0">
				and E.paymentdate IN
				<foreach item="x_paymentdate" index="index" collection="paymentdates"
					open="(" separator="," close=")">
					#{x_paymentdate}
                </foreach>
			</if>


			<if test="remark != null and remark != '' ">
				and E.remark = #{remark}
            </if>

			<if test="remarkLike != null and remarkLike != '' ">
				and E.remark like #{remarkLike}
            </if>

			<if test="remarks != null and remarks.size() &gt; 0">
				and E.remark IN
				<foreach item="x_remark" index="index" collection="remarks"
					open="(" separator="," close=")">
					#{x_remark}
                </foreach>
			</if>

			<if test="createBy != null and createBy != '' ">
				and E.createBy = #{createBy}
            </if>

			<if test="createByLike != null and createByLike != '' ">
				and E.createBy like #{createByLike}
            </if>

			<if test="createBys != null and createBys.size() &gt; 0">
				and E.createBy IN
				<foreach item="x_createBy" index="index" collection="createBys"
					open="(" separator="," close=")">
					#{x_createBy}
                </foreach>
			</if>

			<if test="createDate != null">
				and E.createDate = #{createDate}
            </if>

			<if test="createDateGreaterThanOrEqual != null">
				and E.createDate &gt;= #{createDateGreaterThanOrEqual}
			</if>

			<if test="createDateLessThanOrEqual != null">
				and E.createDate &lt;= #{createDateLessThanOrEqual}
            </if>

			<if test="createDates != null and createDates.size() &gt; 0">
				and E.createDate IN
				<foreach item="x_createDate" index="index" collection="createDates"
					open="(" separator="," close=")">
					#{x_createDate}
                </foreach>
			</if>


			<if test="updateDate != null">
				and E.updateDate = #{updateDate}
            </if>

			<if test="updateDateGreaterThanOrEqual != null">
				and E.updateDate &gt;= #{updateDateGreaterThanOrEqual}
			</if>

			<if test="updateDateLessThanOrEqual != null">
				and E.updateDate &lt;= #{updateDateLessThanOrEqual}
            </if>

			<if test="updateDates != null and updateDates.size() &gt; 0">
				and E.updateDate IN
				<foreach item="x_updateDate" index="index" collection="updateDates"
					open="(" separator="," close=")">
					#{x_updateDate}
                </foreach>
			</if>


			<if test="updateBy != null and updateBy != '' ">
				and E.updateBy = #{updateBy}
            </if>

			<if test="updateByLike != null and updateByLike != '' ">
				and E.updateBy like #{updateByLike}
            </if>

			<if test="updateBys != null and updateBys.size() &gt; 0">
				and E.updateBy IN
				<foreach item="x_updateBy" index="index" collection="updateBys"
					open="(" separator="," close=")">
					#{x_updateBy}
                </foreach>
			</if>

		</where>
	</sql>

	<select id="getReviewBudgets" parameterType="com.glaf.oa.budget.query.BudgetQuery"
		resultMap="budgetResultMap">
		select D.*
		<include refid="selectReviewBudgetsSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
          </when>
			<otherwise>
				order by D.budgetid desc
		  </otherwise>
		</choose>
	</select>

	<select id="getReviewBudgetCount" parameterType="com.glaf.oa.budget.query.BudgetQuery"
		resultType="int">
		select count(*)
		<include refid="selectReviewBudgetsSql" />
	</select>

	<sql id="selectReviewBudgetsSql">

		from oa_budget D
		<if
			test=" workedProcessFlag == 'WD' and actorIds != null and actorIds.size() !=  0">
			inner join JBPM_TASKINSTANCE T on D.PROCESSINSTANCEID
			=
			T.PROCINST_
        	</if>

		<where>
			1 = 1
			<if
				test="workedProcessFlag == 'WD' and actorIds != null and actorIds.size() != 0">
				and ( T.END_ IS NULL)
				and ( T.ACTORID_ IN
				<foreach item="x_actorId" index="index" collection="actorIds"
					open="(" separator="," close=")">
					#{x_actorId}
                </foreach>
				)
			</if>

			<if
				test="workedProcessFlag == 'PD' and actorIds != null and actorIds.size() != 0">
				and D.PROCESSINSTANCEID in (
				SELECT a.PROCINST_
				FROM JBPM_TASKINSTANCE
				a
				WHERE (1 = 1)
				AND (a.END_ IS not NULL)
				AND (a.ACTORID_ IS NOT NULL)
				AND (a.ACTORID_ in
				<foreach item="x_actorId1" index="index" collection="actorIds"
					open="(" separator="," close=")">
					#{x_actorId1}
                </foreach>
				)
				union
				SELECT a.PROCINST_
				FROM JBPM_POOLEDACTOR p
				INNER JOIN
				JBPM_TASKACTORPOOL t
				ON p.ID_ = t.POOLEDACTOR_
				INNER JOIN
				JBPM_TASKINSTANCE a
				ON t.TASKINSTANCE_ = a.ID_
				WHERE (1 = 1)
				AND
				(a.END_ IS NULL)
				AND (a.ACTORID_ IS NULL)
				AND (p.ACTORID_ IN
				<foreach item="x_actorId2" index="index" collection="actorIds"
					open="(" separator="," close=")">
					#{x_actorId2}
                </foreach>
				)
				union
				select distinct 0 from JBPM_TASKINSTANCE
				)
			</if>
			<if test="dept != null and dept != '' ">
				and D.dept = #{dept}
            </if>
			<if test="area != null and area != '' ">
				and D.area = #{area}
            </if>
			<if test="appuser != null and appuser != '' ">
				and D.appuser = #{appuser}
            </if>
            <if test="appdateGreaterThanOrEqual != null">
				and D.appdate &gt;= #{appdateGreaterThanOrEqual}
            </if>

			<if test="appdateLessThanOrEqual != null">
				and D.appdate &lt;= #{appdateLessThanOrEqual}
            </if>
            <if test="budgetnoLike != null and budgetnoLike != '' ">
				and D.budgetno like #{budgetnoLike}
            </if>
            <if test="company != null and company != '' ">
				and D.company = #{company}
            </if>
		</where>
	</sql>
</mapper>