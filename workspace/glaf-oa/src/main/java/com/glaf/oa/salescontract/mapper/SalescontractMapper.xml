<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.oa.salescontract.mapper.SalescontractMapper">

 	<resultMap id="salescontractResultMap"	type="com.glaf.oa.salescontract.model.Salescontract">
        <id property="id" column="id" jdbcType="BIGINT" />
        <result property="contactname" column="contactname" jdbcType="VARCHAR"/>
        <result property="projrctname" column="projrctname" jdbcType="VARCHAR"/>
        <result property="companyname" column="companyname" jdbcType="VARCHAR"/>
        <result property="supplisername" column="supplisername" jdbcType="VARCHAR"/>
        <result property="currency" column="currency" jdbcType="VARCHAR"/>
        <result property="contractsum" column="contractsum" jdbcType="DOUBLE"/>
        <result property="paytype" column="paytype" jdbcType="INTEGER"/>
        <result property="remarks" column="remarks" jdbcType="VARCHAR"/>
        <result property="attachment" column="attachment" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="appuser" column="appuser" jdbcType="VARCHAR"/>
        <result property="appdate" column="appdate" jdbcType="TIMESTAMP"/>
        <result property="contractno" column="contractno" jdbcType="VARCHAR"/>
        <result property="processname" column="processname" jdbcType="VARCHAR"/>
        <result property="processinstanceid" column="processinstanceid" jdbcType="DOUBLE"/>
        <result property="wfstatus" column="wfstatus" jdbcType="DOUBLE"/>
        <result property="optionalsum" column="optionalsum" jdbcType="DOUBLE"/>
        <result property="firstpay" column="firstpay" jdbcType="DOUBLE"/>
        <result property="lastpay" column="lastpay" jdbcType="DOUBLE"/>
        <result property="discount" column="discount" jdbcType="DOUBLE"/>
        <result property="deliverydate" column="deliverydate" jdbcType="TIMESTAMP"/>
        <result property="sales" column="sales" jdbcType="VARCHAR"/>
        <result property="contractsales" column="contractsales" jdbcType="VARCHAR"/>
        <result property="giftsum" column="giftsum" jdbcType="DOUBLE"/>
        <result property="giftremark" column="giftremark" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="area" column="area" jdbcType="BIGINT"/>
        <result property="company" column="company" jdbcType="VARCHAR"/>
        <result property="createby" column="createby" jdbcType="VARCHAR"/>
        <result property="createdate" column="createdate" jdbcType="TIMESTAMP"/>
        <result property="updatedate" column="updatedate" jdbcType="TIMESTAMP"/>
        <result property="updateby" column="updateby" jdbcType="VARCHAR"/>
        <result property="headship" column="headship" jdbcType="VARCHAR"/>
        <result property="dept" column="dept" jdbcType="VARCHAR"/>     
	</resultMap>

 
	<insert id="insertSalescontract" parameterType="com.glaf.oa.salescontract.model.Salescontract">
		insert into oa_salescontract 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    id
			<if test="contactname != null">
				,contactname 
			</if>
			<if test="projrctname != null">
				,projrctname 
			</if>
			<if test="companyname != null">
				,companyname 
			</if>
			<if test="supplisername != null">
				,supplisername 
			</if>
			<if test="currency != null">
				,currency 
			</if>
			<if test="contractsum != null">
				,contractsum 
			</if>
			<if test="paytype != null">
				,paytype 
			</if>
			<if test="remarks != null">
				,remarks 
			</if>
			<if test="attachment != null">
				,attachment 
			</if>
			<if test="status != null">
				,status 
			</if>
			<if test="appuser != null">
				,appuser 
			</if>
			<if test="appdate != null">
				,appdate 
			</if>
			<if test="contractno != null">
				,contractno 
			</if>
			<if test="processname != null">
				,processname 
			</if>
			<if test="processinstanceid != null">
				,processinstanceid 
			</if>
			<if test="wfstatus != null">
				,wfstatus 
			</if>
			<if test="optionalsum != null">
				,optionalsum 
			</if>
			<if test="firstpay != null">
				,firstpay 
			</if>
			<if test="lastpay != null">
				,lastpay 
			</if>
			<if test="discount != null">
				,discount 
			</if>
			<if test="deliverydate != null">
				,deliverydate 
			</if>
			<if test="sales != null">
				,sales 
			</if>
			<if test="contractsales != null">
				,contractsales 
			</if>
			<if test="giftsum != null">
				,giftsum 
			</if>
			<if test="giftremark != null">
				,giftremark 
			</if>
			<if test="remark != null">
				,remark 
			</if>
			<if test="area != null">
				,area 
			</if>
			<if test="company != null">
				,company 
			</if>
			<if test="createby != null">
				,createby 
			</if>
			<if test="createdate != null">
				,createdate 
			</if>
			<if test="updatedate != null">
				,updatedate 
			</if>
			<if test="updateby != null">
				,updateby 
			</if>
			<if test="headship != null">
				,headship 
			</if>
			<if test="dept != null">
				,dept 
			</if>
        </trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=BIGINT}
	     
			<if test="contactname != null">
				,#{contactname, jdbcType=VARCHAR}
			</if>
			<if test="projrctname != null">
				,#{projrctname, jdbcType=VARCHAR}
			</if>
			<if test="companyname != null">
				,#{companyname, jdbcType=VARCHAR}
			</if>
			<if test="supplisername != null">
				,#{supplisername, jdbcType=VARCHAR}
			</if>
			<if test="currency != null">
				,#{currency, jdbcType=VARCHAR}
			</if>
			<if test="contractsum != null">
				,#{contractsum, jdbcType=DOUBLE}
			</if>
			<if test="paytype != null">
				,#{paytype, jdbcType=INTEGER}
			</if>
			<if test="remarks != null">
				,#{remarks, jdbcType=VARCHAR}
			</if>
			<if test="attachment != null">
				,#{attachment, jdbcType=VARCHAR}
			</if>
			<if test="status != null">
				,#{status, jdbcType=INTEGER}
			</if>
			<if test="appuser != null">
				,#{appuser, jdbcType=VARCHAR}
			</if>
			<if test="appdate != null">
				,#{appdate, jdbcType=TIMESTAMP}
			</if>
			<if test="contractno != null">
				,#{contractno, jdbcType=VARCHAR}
			</if>
			<if test="processname != null">
				,#{processname, jdbcType=VARCHAR}
			</if>
			<if test="processinstanceid != null">
				,#{processinstanceid, jdbcType=DOUBLE}
			</if>
			<if test="wfstatus != null">
				,#{wfstatus, jdbcType=DOUBLE}
			</if>
			<if test="optionalsum != null">
				,#{optionalsum, jdbcType=DOUBLE}
			</if>
			<if test="firstpay != null">
				,#{firstpay, jdbcType=DOUBLE}
			</if>
			<if test="lastpay != null">
				,#{lastpay, jdbcType=DOUBLE}
			</if>
			<if test="discount != null">
				,#{discount, jdbcType=DOUBLE}
			</if>
			<if test="deliverydate != null">
				,#{deliverydate, jdbcType=TIMESTAMP}
			</if>
			<if test="sales != null">
				,#{sales, jdbcType=VARCHAR}
			</if>
			<if test="contractsales != null">
				,#{contractsales, jdbcType=VARCHAR}
			</if>
			<if test="giftsum != null">
				,#{giftsum, jdbcType=DOUBLE}
			</if>
			<if test="giftremark != null">
				,#{giftremark, jdbcType=VARCHAR}
			</if>
			<if test="remark != null">
				,#{remark, jdbcType=VARCHAR}
			</if>
			<if test="area != null">
				,#{area, jdbcType=BIGINT}
			</if>
			<if test="company != null">
				,#{company, jdbcType=VARCHAR}
			</if>
			<if test="createby != null">
				,#{createby, jdbcType=VARCHAR}
			</if>
			<if test="createdate != null">
				,#{createdate, jdbcType=TIMESTAMP}
			</if>
			<if test="updatedate != null">
				,#{updatedate, jdbcType=TIMESTAMP}
			</if>
			<if test="updateby != null">
				,#{updateby, jdbcType=VARCHAR}
			</if>
			<if test="headship != null">
				,#{headship, jdbcType=VARCHAR}
			</if>
			<if test="dept != null">
				, #{dept, jdbcType=VARCHAR}
			</if>
	    </trim>
    </insert>

	 
	<update id="updateSalescontract" parameterType="com.glaf.oa.salescontract.model.Salescontract">
		update oa_salescontract
		set
        <trim prefix="" suffix="" suffixOverrides=",">		
			<if test="contactname != null">
				contactname = #{contactname, jdbcType=VARCHAR},
			</if>
			<if test="projrctname != null">
				projrctname = #{projrctname, jdbcType=VARCHAR},
			</if>
			<if test="companyname != null">
				companyname = #{companyname, jdbcType=VARCHAR},
			</if>
			<if test="supplisername != null">
				supplisername = #{supplisername, jdbcType=VARCHAR},
			</if>
			<if test="currency != null">
				currency = #{currency, jdbcType=VARCHAR},
			</if>
			<if test="contractsum != null">
				contractsum = #{contractsum, jdbcType=DOUBLE},
			</if>
			<if test="paytype != null">
				paytype = #{paytype, jdbcType=INTEGER},
			</if>
			<if test="remarks != null">
				remarks = #{remarks, jdbcType=VARCHAR},
			</if>
			<if test="attachment != null">
				attachment = #{attachment, jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status, jdbcType=INTEGER},
			</if>
			<if test="appuser != null">
				appuser = #{appuser, jdbcType=VARCHAR},
			</if>
			<if test="appdate != null">
				appdate = #{appdate, jdbcType=TIMESTAMP},
			</if>
			<if test="contractno != null">
				contractno = #{contractno, jdbcType=VARCHAR},
			</if>
			<if test="processname != null">
				processname = #{processname, jdbcType=VARCHAR},
			</if>
			<if test="processinstanceid != null">
				processinstanceid = #{processinstanceid, jdbcType=DOUBLE},
			</if>
			<if test="wfstatus != null">
				wfstatus = #{wfstatus, jdbcType=DOUBLE},
			</if>
			<if test="optionalsum != null">
				optionalsum = #{optionalsum, jdbcType=DOUBLE},
			</if>
			<if test="firstpay != null">
				firstpay = #{firstpay, jdbcType=DOUBLE},
			</if>
			<if test="lastpay != null">
				lastpay = #{lastpay, jdbcType=DOUBLE},
			</if>
			<if test="discount != null">
				discount = #{discount, jdbcType=DOUBLE},
			</if>
			<if test="deliverydate != null">
				deliverydate = #{deliverydate, jdbcType=TIMESTAMP},
			</if>
			<if test="sales != null">
				sales = #{sales, jdbcType=VARCHAR},
			</if>
			<if test="contractsales != null">
				contractsales = #{contractsales, jdbcType=VARCHAR},
			</if>
			<if test="giftsum != null">
				giftsum = #{giftsum, jdbcType=DOUBLE},
			</if>
			<if test="giftremark != null">
				giftremark = #{giftremark, jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark, jdbcType=VARCHAR},
			</if>
			<if test="area != null">
				area = #{area, jdbcType=BIGINT},
			</if>
			<if test="company != null">
				company = #{company, jdbcType=VARCHAR},
			</if>
			<if test="createby != null">
				createby = #{createby, jdbcType=VARCHAR},
			</if>
			<if test="createdate != null">
				createdate = #{createdate, jdbcType=TIMESTAMP},
			</if>
			<if test="updatedate != null">
				updatedate = #{updatedate, jdbcType=TIMESTAMP},
			</if>
			<if test="updateby != null">
				updateby = #{updateby, jdbcType=VARCHAR},
			</if>
			<if test="headship != null">
				headship = #{headship, jdbcType=VARCHAR},
			</if>
			<if test="dept != null">
				dept = #{dept, jdbcType=VARCHAR} 
			</if>
        </trim>
		where
          id = #{id, jdbcType=BIGINT}
		
    </update>

 
	<delete id="deleteSalescontractById" parameterType="long"> 
        delete from oa_salescontract
        where id =	#{id}
	</delete>

	
	<delete id="deleteSalescontracts" parameterType="com.glaf.oa.salescontract.query.SalescontractQuery">
		delete from oa_salescontract
		where ( 
 			  id IN
              <foreach item="x_id" index="index" collection="ids" 
                     open="(" separator="," close=")">
                  #{x_id}
              </foreach>
		)
	</delete>


	<select id="getSalescontractById" parameterType="long" resultMap="salescontractResultMap">
		select * from oa_salescontract where id = #{id}
	</select>


	<select id="getSalescontracts" 
	    parameterType="com.glaf.oa.salescontract.query.SalescontractQuery"
		resultMap="salescontractResultMap">
		select E.*
		<include refid="selectSalescontractsSql" />
		<choose>
		  <when test="orderBy != null">
		     order by ${orderBy}
          </when>
		  <otherwise>
		      order by E.id desc
		  </otherwise>
        </choose>
	</select>


	<select id="getSalescontractCount" 
	    parameterType="com.glaf.oa.salescontract.query.SalescontractQuery"
		resultType="int">
		select count(*)
		<include refid="selectSalescontractsSql" />
	</select>


	<sql id="selectSalescontractsSql">

		from oa_salescontract E
		
		 
		<where>
		       1 = 1  

	        
			<if test="contactname != null and contactname != '' ">
				and E.contactname = #{contactname}
            </if>

			<if test="contactnameLike != null and contactnameLike != '' ">
				and E.contactname like #{contactnameLike}
            </if>

			<if test="contactnames != null and contactnames.size() &gt; 0">
			    and E.contactname IN
                <foreach item="x_contactname" index="index" collection="contactnames" 
                     open="(" separator="," close=")">
                  #{x_contactname}
                </foreach>
			</if>
	        
			<if test="projrctname != null and projrctname != '' ">
				and E.projrctname = #{projrctname}
            </if>

			<if test="projrctnameLike != null and projrctnameLike != '' ">
				and E.projrctname like #{projrctnameLike}
            </if>

			<if test="projrctnames != null and projrctnames.size() &gt; 0">
			    and E.projrctname IN
                <foreach item="x_projrctname" index="index" collection="projrctnames" 
                     open="(" separator="," close=")">
                  #{x_projrctname}
                </foreach>
			</if>
	        
			<if test="companyname != null and companyname != '' ">
				and E.companyname = #{companyname}
            </if>

			<if test="companynameLike != null and companynameLike != '' ">
				and E.companyname like #{companynameLike}
            </if>

			<if test="companynames != null and companynames.size() &gt; 0">
			    and E.companyname IN
                <foreach item="x_companyname" index="index" collection="companynames" 
                     open="(" separator="," close=")">
                  #{x_companyname}
                </foreach>
			</if>
	        
			<if test="supplisername != null and supplisername != '' ">
				and E.supplisername = #{supplisername}
            </if>

			<if test="supplisernameLike != null and supplisernameLike != '' ">
				and E.supplisername like #{supplisernameLike}
            </if>

			<if test="supplisernames != null and supplisernames.size() &gt; 0">
			    and E.supplisername IN
                <foreach item="x_supplisername" index="index" collection="supplisernames" 
                     open="(" separator="," close=")">
                  #{x_supplisername}
                </foreach>
			</if>
	        
			<if test="currency != null and currency != '' ">
				and E.currency = #{currency}
            </if>

			<if test="currencyLike != null and currencyLike != '' ">
				and E.currency like #{currencyLike}
            </if>

			<if test="currencys != null and currencys.size() &gt; 0">
			    and E.currency IN
                <foreach item="x_currency" index="index" collection="currencys" 
                     open="(" separator="," close=")">
                  #{x_currency}
                </foreach>
			</if>

			<if test="contractsum != null">
				and E.contractsum = #{contractsum}
            </if>

			<if test="contractsumGreaterThanOrEqual != null">
				and E.contractsum &gt;= #{contractsumGreaterThanOrEqual}
            </if>

			<if test="contractsumLessThanOrEqual != null">
				and E.contractsum &lt;= #{contractsumLessThanOrEqual}
            </if>

			<if test="contractsums != null and contractsums.size() &gt; 0">
			    and E.contractsum IN
                <foreach item="x_contractsum" index="index" collection="contractsums" 
                     open="(" separator="," close=")">
                  #{x_contractsum}
                </foreach>
			</if>


			<if test="paytype != null">
				and E.paytype = #{paytype}
            </if>

			<if test="paytypeGreaterThanOrEqual != null">
				and E.paytype &gt;= #{paytypeGreaterThanOrEqual}
            </if>

			<if test="paytypeLessThanOrEqual != null">
				and E.paytype &lt;= #{paytypeLessThanOrEqual}
            </if>

			<if test="paytypes != null and paytypes.size() &gt; 0">
			    and E.paytype IN
                <foreach item="x_paytype" index="index" collection="paytypes" 
                     open="(" separator="," close=")">
                  #{x_paytype}
                </foreach>
			</if>

	        
			<if test="remarks != null and remarks != '' ">
				and E.remarks = #{remarks}
            </if>

			<if test="remarksLike != null and remarksLike != '' ">
				and E.remarks like #{remarksLike}
            </if>

			<if test="remarkss != null and remarkss.size() &gt; 0">
			    and E.remarks IN
                <foreach item="x_remarks" index="index" collection="remarkss" 
                     open="(" separator="," close=")">
                  #{x_remarks}
                </foreach>
			</if>
	        
			<if test="attachment != null and attachment != '' ">
				and E.attachment = #{attachment}
            </if>

			<if test="attachmentLike != null and attachmentLike != '' ">
				and E.attachment like #{attachmentLike}
            </if>

			<if test="attachments != null and attachments.size() &gt; 0">
			    and E.attachment IN
                <foreach item="x_attachment" index="index" collection="attachments" 
                     open="(" separator="," close=")">
                  #{x_attachment}
                </foreach>
			</if>

			<if test="status != null">
				and E.status = #{status}
            </if>

			<if test="statusGreaterThanOrEqual != null">
				and E.status &gt;= #{statusGreaterThanOrEqual}
            </if>

			<if test="statusLessThanOrEqual != null">
				and E.status &lt;= #{statusLessThanOrEqual}
            </if>

			<if test="statuss != null and statuss.size() &gt; 0">
			    and E.status IN
                <foreach item="x_status" index="index" collection="statuss" 
                     open="(" separator="," close=")">
                  #{x_status}
                </foreach>
			</if>

	        
			<if test="appuser != null and appuser != '' ">
				and E.appuser = #{appuser}
            </if>

			<if test="appuserLike != null and appuserLike != '' ">
				and E.appuser like #{appuserLike}
            </if>

			<if test="appusers != null and appusers.size() &gt; 0">
			    and E.appuser IN
                <foreach item="x_appuser" index="index" collection="appusers" 
                     open="(" separator="," close=")">
                  #{x_appuser}
                </foreach>
			</if>

			<if test="appdate != null">
				and E.appdate = #{appdate}
            </if>

			<if test="appdateGreaterThanOrEqual != null">
				and E.appdate &gt;= #{appdateGreaterThanOrEqual}
            </if>

			<if test="appdateLessThanOrEqual != null">
				and E.appdate &lt;= #{appdateLessThanOrEqual}
            </if>

			<if test="appdates != null and appdates.size() &gt; 0">
			    and E.appdate IN
                <foreach item="x_appdate" index="index" collection="appdates" 
                     open="(" separator="," close=")">
                  #{x_appdate}
                </foreach>
			</if>

	        
			<if test="contractno != null and contractno != '' ">
				and E.contractno = #{contractno}
            </if>

			<if test="contractnoLike != null and contractnoLike != '' ">
				and E.contractno like #{contractnoLike}
            </if>

			<if test="contractnos != null and contractnos.size() &gt; 0">
			    and E.contractno IN
                <foreach item="x_contractno" index="index" collection="contractnos" 
                     open="(" separator="," close=")">
                  #{x_contractno}
                </foreach>
			</if>
	        
			<if test="processname != null and processname != '' ">
				and E.processname = #{processname}
            </if>

			<if test="processnameLike != null and processnameLike != '' ">
				and E.processname like #{processnameLike}
            </if>

			<if test="processnames != null and processnames.size() &gt; 0">
			    and E.processname IN
                <foreach item="x_processname" index="index" collection="processnames" 
                     open="(" separator="," close=")">
                  #{x_processname}
                </foreach>
			</if>

			<if test="processinstanceid != null">
				and E.processinstanceid = #{processinstanceid}
            </if>

			<if test="processinstanceidGreaterThanOrEqual != null">
				and E.processinstanceid &gt;= #{processinstanceidGreaterThanOrEqual}
            </if>

			<if test="processinstanceidLessThanOrEqual != null">
				and E.processinstanceid &lt;= #{processinstanceidLessThanOrEqual}
            </if>

			<if test="processinstanceids != null and processinstanceids.size() &gt; 0">
			    and E.processinstanceid IN
                <foreach item="x_processinstanceid" index="index" collection="processinstanceids" 
                     open="(" separator="," close=")">
                  #{x_processinstanceid}
                </foreach>
			</if>


			<if test="wfstatus != null">
				and E.wfstatus = #{wfstatus}
            </if>

			<if test="wfstatusGreaterThanOrEqual != null">
				and E.wfstatus &gt;= #{wfstatusGreaterThanOrEqual}
            </if>

			<if test="wfstatusLessThanOrEqual != null">
				and E.wfstatus &lt;= #{wfstatusLessThanOrEqual}
            </if>

			<if test="wfstatuss != null and wfstatuss.size() &gt; 0">
			    and E.wfstatus IN
                <foreach item="x_wfstatus" index="index" collection="wfstatuss" 
                     open="(" separator="," close=")">
                  #{x_wfstatus}
                </foreach>
			</if>

			<if test="optionalsum != null">
				and E.optionalsum = #{optionalsum}
            </if>

			<if test="optionalsumGreaterThanOrEqual != null">
				and E.optionalsum &gt;= #{optionalsumGreaterThanOrEqual}
            </if>

			<if test="optionalsumLessThanOrEqual != null">
				and E.optionalsum &lt;= #{optionalsumLessThanOrEqual}
            </if>

			<if test="optionalsums != null and optionalsums.size() &gt; 0">
			    and E.optionalsum IN
                <foreach item="x_optionalsum" index="index" collection="optionalsums" 
                     open="(" separator="," close=")">
                  #{x_optionalsum}
                </foreach>
			</if>


			<if test="firstpay != null">
				and E.firstpay = #{firstpay}
            </if>

			<if test="firstpayGreaterThanOrEqual != null">
				and E.firstpay &gt;= #{firstpayGreaterThanOrEqual}
            </if>

			<if test="firstpayLessThanOrEqual != null">
				and E.firstpay &lt;= #{firstpayLessThanOrEqual}
            </if>

			<if test="firstpays != null and firstpays.size() &gt; 0">
			    and E.firstpay IN
                <foreach item="x_firstpay" index="index" collection="firstpays" 
                     open="(" separator="," close=")">
                  #{x_firstpay}
                </foreach>
			</if>


			<if test="lastpay != null">
				and E.lastpay = #{lastpay}
            </if>

			<if test="lastpayGreaterThanOrEqual != null">
				and E.lastpay &gt;= #{lastpayGreaterThanOrEqual}
            </if>

			<if test="lastpayLessThanOrEqual != null">
				and E.lastpay &lt;= #{lastpayLessThanOrEqual}
            </if>

			<if test="lastpays != null and lastpays.size() &gt; 0">
			    and E.lastpay IN
                <foreach item="x_lastpay" index="index" collection="lastpays" 
                     open="(" separator="," close=")">
                  #{x_lastpay}
                </foreach>
			</if>

			<if test="discount != null">
				and E.discount = #{discount}
            </if>

			<if test="discountGreaterThanOrEqual != null">
				and E.discount &gt;= #{discountGreaterThanOrEqual}
            </if>

			<if test="discountLessThanOrEqual != null">
				and E.discount &lt;= #{discountLessThanOrEqual}
            </if>

			<if test="discounts != null and discounts.size() &gt; 0">
			    and E.discount IN
                <foreach item="x_discount" index="index" collection="discounts" 
                     open="(" separator="," close=")">
                  #{x_discount}
                </foreach>
			</if>


			<if test="deliverydate != null">
				and E.deliverydate = #{deliverydate}
            </if>

			<if test="deliverydateGreaterThanOrEqual != null">
				and E.deliverydate &gt;= #{deliverydateGreaterThanOrEqual}
            </if>

			<if test="deliverydateLessThanOrEqual != null">
				and E.deliverydate &lt;= #{deliverydateLessThanOrEqual}
            </if>

			<if test="deliverydates != null and deliverydates.size() &gt; 0">
			    and E.deliverydate IN
                <foreach item="x_deliverydate" index="index" collection="deliverydates" 
                     open="(" separator="," close=")">
                  #{x_deliverydate}
                </foreach>
			</if>

	        
			<if test="sales != null and sales != '' ">
				and E.sales = #{sales}
            </if>

			<if test="salesLike != null and salesLike != '' ">
				and E.sales like #{salesLike}
            </if>

			<if test="saless != null and saless.size() &gt; 0">
			    and E.sales IN
                <foreach item="x_sales" index="index" collection="saless" 
                     open="(" separator="," close=")">
                  #{x_sales}
                </foreach>
			</if>
	        
			<if test="contractsales != null and contractsales != '' ">
				and E.contractsales = #{contractsales}
            </if>

			<if test="contractsalesLike != null and contractsalesLike != '' ">
				and E.contractsales like #{contractsalesLike}
            </if>

			<if test="contractsaless != null and contractsaless.size() &gt; 0">
			    and E.contractsales IN
                <foreach item="x_contractsales" index="index" collection="contractsaless" 
                     open="(" separator="," close=")">
                  #{x_contractsales}
                </foreach>
			</if>

			<if test="giftsum != null">
				and E.giftsum = #{giftsum}
            </if>

			<if test="giftsumGreaterThanOrEqual != null">
				and E.giftsum &gt;= #{giftsumGreaterThanOrEqual}
            </if>

			<if test="giftsumLessThanOrEqual != null">
				and E.giftsum &lt;= #{giftsumLessThanOrEqual}
            </if>

			<if test="giftsums != null and giftsums.size() &gt; 0">
			    and E.giftsum IN
                <foreach item="x_giftsum" index="index" collection="giftsums" 
                     open="(" separator="," close=")">
                  #{x_giftsum}
                </foreach>
			</if>

	        
			<if test="giftremark != null and giftremark != '' ">
				and E.giftremark = #{giftremark}
            </if>

			<if test="giftremarkLike != null and giftremarkLike != '' ">
				and E.giftremark like #{giftremarkLike}
            </if>

			<if test="giftremarks != null and giftremarks.size() &gt; 0">
			    and E.giftremark IN
                <foreach item="x_giftremark" index="index" collection="giftremarks" 
                     open="(" separator="," close=")">
                  #{x_giftremark}
                </foreach>
			</if>
	        
			<if test="remark != null and remark != '' ">
				and E.remark = #{remark}
            </if>

			<if test="remarkLike != null and remarkLike != '' ">
				and E.remark like #{remarkLike}
            </if>

			<if test="remarks != null and remarks.size() &gt; 0">
			    and E.remark IN
                <foreach item="x_remark" index="index" collection="remarks" 
                     open="(" separator="," close=")">
                  #{x_remark}
                </foreach>
			</if>

			<if test="area != null">
				and E.area = #{area}
            </if>
	        
			<if test="company != null and company != '' ">
				and E.company = #{company}
            </if>

			<if test="companyLike != null and companyLike != '' ">
				and E.company like #{companyLike}
            </if>

			<if test="companys != null and companys.size() &gt; 0">
			    and E.company IN
                <foreach item="x_company" index="index" collection="companys" 
                     open="(" separator="," close=")">
                  #{x_company}
                </foreach>
			</if>
	        
			<if test="createby != null and createby != '' ">
				and E.createby = #{createby}
            </if>

			<if test="createbyLike != null and createbyLike != '' ">
				and E.createby like #{createbyLike}
            </if>

			<if test="createbys != null and createbys.size() &gt; 0">
			    and E.createby IN
                <foreach item="x_createby" index="index" collection="createbys" 
                     open="(" separator="," close=")">
                  #{x_createby}
                </foreach>
			</if>

			<if test="createdate != null">
				and E.createdate = #{createdate}
            </if>

			<if test="createdateGreaterThanOrEqual != null">
				and E.createdate &gt;= #{createdateGreaterThanOrEqual}
            </if>

			<if test="createdateLessThanOrEqual != null">
				and E.createdate &lt;= #{createdateLessThanOrEqual}
            </if>

			<if test="createdates != null and createdates.size() &gt; 0">
			    and E.createdate IN
                <foreach item="x_createdate" index="index" collection="createdates" 
                     open="(" separator="," close=")">
                  #{x_createdate}
                </foreach>
			</if>


			<if test="updatedate != null">
				and E.updatedate = #{updatedate}
            </if>

			<if test="updatedateGreaterThanOrEqual != null">
				and E.updatedate &gt;= #{updatedateGreaterThanOrEqual}
            </if>

			<if test="updatedateLessThanOrEqual != null">
				and E.updatedate &lt;= #{updatedateLessThanOrEqual}
            </if>

			<if test="updatedates != null and updatedates.size() &gt; 0">
			    and E.updatedate IN
                <foreach item="x_updatedate" index="index" collection="updatedates" 
                     open="(" separator="," close=")">
                  #{x_updatedate}
                </foreach>
			</if>

	        
			<if test="updateby != null and updateby != '' ">
				and E.updateby = #{updateby}
            </if>

			<if test="updatebyLike != null and updatebyLike != '' ">
				and E.updateby like #{updatebyLike}
            </if>

			<if test="updatebys != null and updatebys.size() &gt; 0">
			    and E.updateby IN
                <foreach item="x_updateby" index="index" collection="updatebys" 
                     open="(" separator="," close=")">
                  #{x_updateby}
                </foreach>
			</if>
	        			 
		</where>
	</sql>
	
	<select id="getReviewSalescontractCount" parameterType="com.glaf.oa.salescontract.query.SalescontractQuery"
		resultType="int">
		select count(*)
		<include refid="selectReviewSalescontractsSql" />
	</select>

	<select id="getReviewSalescontracts" parameterType="com.glaf.oa.salescontract.query.SalescontractQuery"
		resultMap="salescontractResultMap">
		select D.*
		<include refid="selectReviewSalescontractsSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
          </when>
			<otherwise>
				order by D.id desc
		  </otherwise>
		</choose>
	</select>

	<sql id="selectReviewSalescontractsSql">

		from oa_salescontract D

		<if
			test=" workedProcessFlag == 'WD' and actorIds != null and actorIds.size() !=  0">
			inner join JBPM_TASKINSTANCE T on D.PROCESSINSTANCEID 
			 = T.PROCINST_
        	</if>
        	      
		<where>
			1 = 1	
			<if
				test="workedProcessFlag == 'WD' and actorIds != null and actorIds.size() != 0">
				and ( T.END_ IS  NULL)
				and ( T.ACTORID_ IN
				<foreach item="x_actorId" index="index" collection="actorIds"
					open="(" separator="," close=")">
					#{x_actorId}
                </foreach>
				)	
			</if>
			
			<if
				test="workedProcessFlag == 'PD' and actorIds != null and actorIds.size() != 0" >
				and D.PROCESSINSTANCEID  in (
				SELECT a.PROCINST_
				FROM JBPM_TASKINSTANCE a
				WHERE (1 = 1)
				AND (a.END_ IS not NULL)
				AND (a.ACTORID_ IS NOT NULL)
				AND (a.ACTORID_ in
					<foreach item="x_actorId1" index="index" collection="actorIds"
					open="(" separator="," close=")">
					#{x_actorId1}
                </foreach>
				)
				union
				SELECT a.PROCINST_
				FROM JBPM_POOLEDACTOR p
				INNER JOIN JBPM_TASKACTORPOOL t
				ON p.ID_ = t.POOLEDACTOR_
				INNER JOIN JBPM_TASKINSTANCE a
				ON t.TASKINSTANCE_ = a.ID_
				WHERE (1 = 1)
				AND (a.END_ IS NULL)
				AND (a.ACTORID_ IS NULL)
				AND (p.ACTORID_ IN 
				<foreach item="x_actorId2" index="index" collection="actorIds"
					open="(" separator="," close=")">
					#{x_actorId2}
                </foreach>
				)
				union 
				select distinct 0 from JBPM_TASKINSTANCE 
				)
				</if>
				
			<if test="contactnameLike != null and contactnameLike != '' ">
				and D.contactname like #{contactnameLike}
            </if>

			<if test="appdateGreaterThanOrEqual != null">
				and D.appdate &gt;= #{appdateGreaterThanOrEqual}
            </if>

			<if test="area != null and area != ''" >
				and D.area = #{area}        
            </if>
             <if test="appuser != null and appuser != ''">
            	and D.appuser = #{appuser}
            </if>
            <if test="contractnoLike != null and contractnoLike != ''">
            	and D.contractno like #{contractnoLike}
            </if>
            <if test="projrctnameLike != null and projrctnameLike != ''">
            	and D.projrctname like #{projrctnameLike}
            </if>
		</where>
	</sql>
	

</mapper>