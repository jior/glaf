<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.base.modules.sys.mapper.SysDepartmentMapper">

	<resultMap id="sysDepartmentResultMap" type="com.glaf.base.modules.sys.model.SysDepartment">
		<id property="id" column="ID" jdbcType="BIGINT" />
		<result property="name" column="NAME" jdbcType="VARCHAR" />
		<result property="desc" column="DEPTDESC" jdbcType="VARCHAR" />
		<result property="sort" column="SORT" jdbcType="INTEGER" />
		<result property="no" column="DEPTNO" jdbcType="VARCHAR" />
		<result property="code" column="CODE" jdbcType="VARCHAR" />
		<result property="code2" column="CODE2" jdbcType="VARCHAR" />
		<result property="level" column="DEPTLEVEL" jdbcType="INTEGER" />
		<result property="status" column="STATUS" jdbcType="INTEGER" />
		<result property="fincode" column="FINCODE" jdbcType="VARCHAR" />
		<result property="nodeId" column="NODEID" jdbcType="BIGINT" />
		<result property="createBy" column="CREATEBY" jdbcType="VARCHAR" />
		<result property="createTime" column="CREATETIME" jdbcType="TIMESTAMP" />
		<result property="updateBy" column="UPDATEBY" jdbcType="VARCHAR" />
		<result property="updateDate" column="UPDATEDATE" jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertSysDepartment" parameterType="com.glaf.base.modules.sys.model.SysDepartment">
		insert into sys_department
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID
			<if test="name != null">
				,NAME
			</if>
			<if test="desc != null">
				,DEPTDESC
			</if>
			<if test="sort != null">
				,SORT
			</if>
			<if test="no != null">
				,DEPTNO
			</if>
			<if test="code != null">
				,CODE
			</if>
			<if test="code2 != null">
				,CODE2
			</if>
			<if test="level != null">
				,DEPTLEVEL
			</if>
			<if test="status != null">
				,STATUS
			</if>
			<if test="fincode != null">
				,FINCODE
			</if>
			<if test="nodeId != null">
				,NODEID
			</if>
			<if test="createBy != null">
				,CREATEBY
			</if>
			<if test="createTime != null">
				,CREATETIME
			</if>
			<if test="updateBy != null">
				,UPDATEBY
			</if>
			<if test="updateDate != null">
				,UPDATEDATE
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=BIGINT}

			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="desc != null">
				,#{desc, jdbcType=VARCHAR}
			</if>
			<if test="sort != null">
				,#{sort, jdbcType=INTEGER}
			</if>
			<if test="no != null">
				,#{no, jdbcType=VARCHAR}
			</if>
			<if test="code != null">
				,#{code, jdbcType=VARCHAR}
			</if>
			<if test="code2 != null">
				,#{code2, jdbcType=VARCHAR}
			</if>
			<if test="level != null">
				,#{level, jdbcType=INTEGER}
			</if>
			<if test="status != null">
				,#{status, jdbcType=INTEGER}
			</if>
			<if test="fincode != null">
				,#{fincode, jdbcType=VARCHAR}
			</if>
			<if test="nodeId != null">
				,#{nodeId, jdbcType=BIGINT}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
			<if test="updateDate != null">
				,#{updateDate, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<update id="updateSysDepartment" parameterType="com.glaf.base.modules.sys.model.SysDepartment">
		update sys_department
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="name != null">
				NAME = #{name, jdbcType=VARCHAR},
			</if>
			<if test="desc != null">
				DEPTDESC = #{desc, jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				CREATETIME = #{createTime, jdbcType=TIMESTAMP},
			</if>
			<if test="sort != null">
				SORT = #{sort, jdbcType=INTEGER},
			</if>
			<if test="no != null">
				DEPTNO = #{no, jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				CODE = #{code, jdbcType=VARCHAR},
			</if>
			<if test="code2 != null">
				CODE2 = #{code2, jdbcType=VARCHAR},
			</if>
			<if test="level != null">
				DEPTLEVEL = #{level, jdbcType=INTEGER},
			</if>
			<if test="status != null">
				STATUS = #{status, jdbcType=INTEGER},
			</if>
			<if test="fincode != null">
				FINCODE = #{fincode, jdbcType=VARCHAR},
			</if>
			<if test="nodeId != null">
				NODEID = #{nodeId, jdbcType=BIGINT},
			</if>
			<if test="updateBy != null">
				UPDATEBY = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				UPDATEDATE = #{updateDate, jdbcType=TIMESTAMP},
			</if>
		</trim>
		where
		ID = #{id, jdbcType=BIGINT}

	</update>


	<delete id="deleteSysDepartmentById" parameterType="long">
		delete from
		sys_department
		where ID = #{id}
	</delete>

	<delete id="deleteSysDepartments" parameterType="com.glaf.base.modules.sys.query.SysDepartmentQuery">
		delete from sys_department
		where (
		ID IN
		<foreach item="x_rowId" index="index" collection="rowIds"
			open="(" separator="," close=")">
			#{x_rowId}
		</foreach>
		)
	</delete>

	<select id="getSysDepartmentById" parameterType="long"
		resultMap="sysDepartmentResultMap">
		select * from sys_department where ID = #{id}
	</select>


	<select id="getSysDepartments" parameterType="com.glaf.base.modules.sys.query.SysDepartmentQuery"
		resultMap="sysDepartmentResultMap">
		select E.*
		<include refid="selectSysDepartmentsSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.SORT asc
			</otherwise>
		</choose>
	</select>

	<select id="getSysDepartmentCount" parameterType="com.glaf.base.modules.sys.query.SysDepartmentQuery"
		resultType="int">
		select count(*)
		<include refid="selectSysDepartmentsSql" />
	</select>

	<sql id="selectSysDepartmentsSql">

		from sys_department E

		<if test=" parentId != null  ">
			inner join sys_tree T
			on E.NODEID = T.ID
		</if>

		<where>
			1 = 1

			<if test=" parentId != null  ">
				and T.PARENT = #{parentId}
			</if>

			<if test="name != null and name != '' ">
				and E.NAME = #{name}
			</if>

			<if test="nameLike != null and nameLike != '' ">
				and E.NAME like #{nameLike}
			</if>

			<if test="names != null and names.size != 0">
				and E.NAME IN
				<foreach item="x_name" index="index" collection="names"
					open="(" separator="," close=")">
					#{x_name}
				</foreach>
			</if>

			<if test="descLike != null and descLike != '' ">
				and E.DEPTDESC like #{descLike}
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME &gt;= #{createTimeGreaterThanOrEqual}
			</if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME &lt;= #{createTimeLessThanOrEqual}
			</if>

			<if test="sortGreaterThanOrEqual != null">
				and E.SORT &gt;= #{sortGreaterThanOrEqual}
			</if>

			<if test="sortLessThanOrEqual != null">
				and E.SORT &lt;= #{sortLessThanOrEqual}
			</if>

			<if test="no != null and no != '' ">
				and E.DEPTNO = #{no}
			</if>

			<if test="noLike != null and noLike != '' ">
				and E.DEPTNO like #{noLike}
			</if>

			<if test="noLeftLike != null and noLeftLike != '' ">
				and E.DEPTNO like #{noLeftLike}
			</if>

			<if test="noRightLike != null and noRightLike != '' ">
				and E.DEPTNO like #{noRightLike}
			</if>

			<if test="code != null and code != '' ">
				and E.CODE = #{code}
			</if>

			<if test="codeLike != null and codeLike != '' ">
				and E.CODE like #{codeLike}
			</if>

			<if test="codeLeftLike != null and codeLeftLike != '' ">
				and E.CODE like #{codeLeftLike}
			</if>

			<if test="codeRightLike != null and codeRightLike != '' ">
				and E.CODE like #{codeRightLike}
			</if>

			<if test="codes != null and codes.size != 0">
				and E.CODE IN
				<foreach item="x_code" index="index" collection="codes"
					open="(" separator="," close=")">
					#{x_code}
				</foreach>
			</if>

			<if test="code2 != null and code2 != '' ">
				and E.CODE2 = #{code2}
			</if>

			<if test="code2Like != null and code2Like != '' ">
				and E.CODE like #{code2Like}
			</if>

			<if test="code2LeftLike != null and code2LeftLike != '' ">
				and E.CODE like #{code2LeftLike}
			</if>

			<if test="code2RightLike != null and code2RightLike != '' ">
				and E.CODE like #{code2RightLike}
			</if>

			<if test="status != null">
				and E.STATUS = #{status}
			</if>

			<if test="statusGreaterThanOrEqual != null">
				and E.STATUS &gt;= #{statusGreaterThanOrEqual}
			</if>

			<if test="statusLessThanOrEqual != null">
				and E.STATUS &lt;= #{statusLessThanOrEqual}
			</if>

			<if test="fincode != null and fincode != '' ">
				and E.FINCODE = #{fincode}
			</if>

			<if test="fincodeLike != null and fincodeLike != '' ">
				and E.FINCODE like #{fincodeLike}
			</if>

			<if test="fincodeLeftLike != null and fincodeLeftLike != '' ">
				and E.FINCODE like #{fincodeLeftLike}
			</if>

			<if test="fincodeRightLike != null and fincodeRightLike != '' ">
				and E.FINCODE like #{fincodeRightLike}
			</if>

			<if test="nodeId != null">
				and E.NODEID = #{nodeId}
			</if>

			<if test="nodeIdGreaterThanOrEqual != null">
				and E.NODEID &gt;= #{nodeIdGreaterThanOrEqual}
			</if>

			<if test="nodeIdLessThanOrEqual != null">
				and E.NODEID &lt;= #{nodeIdLessThanOrEqual}
			</if>

			<if test="nodeIds != null and nodeIds.size != 0">
				and E.NODEID IN
				<foreach item="x_nodeId" index="index" collection="nodeIds"
					open="(" separator="," close=")">
					#{x_nodeId}
				</foreach>
			</if>

			<if test="level != null">
				and E.DEPTLEVEL = #{level}
			</if>

			<if test="levelGreaterThanOrEqual != null">
				and E.DEPTLEVEL &gt;= #{levelGreaterThanOrEqual}
			</if>

			<if test="levelLessThanOrEqual != null">
				and E.DEPTLEVEL &lt;= #{levelLessThanOrEqual}
			</if>

		</where>
	</sql>

</mapper>