<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.base.modules.sys.mapper.DictoryMapper">

	<resultMap id="dictoryResultMap"	type="com.glaf.base.modules.sys.model.Dictory">
		<id property="id" column="ID" jdbcType="BIGINT" />
		<result property="typeId" column="TYPEID" jdbcType="BIGINT"/>
		<result property="name" column="NAME" jdbcType="VARCHAR"/>
		<result property="desc" column="DICTDESC" jdbcType="VARCHAR"/>
		<result property="code" column="CODE" jdbcType="VARCHAR"/>
		<result property="sort" column="SORT" jdbcType="INTEGER"/>
		<result property="blocked" column="BLOCKED" jdbcType="INTEGER"/>
		<result property="ext1" column="EXT1" jdbcType="VARCHAR"/>
		<result property="ext2" column="EXT2" jdbcType="VARCHAR"/>
		<result property="ext3" column="EXT3" jdbcType="VARCHAR"/>
		<result property="ext4" column="EXT4" jdbcType="VARCHAR"/>
		<result property="ext5" column="EXT5" jdbcType="TIMESTAMP"/>
		<result property="ext6" column="EXT6" jdbcType="TIMESTAMP"/>
	</resultMap>

 
	<insert id="insertDictory" parameterType="com.glaf.base.modules.sys.model.Dictory">
		insert into sys_dictory 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    ID
			<if test="typeId != null">
				,TYPEID 
			</if>
			<if test="name != null">
				,NAME 
			</if>
			<if test="desc != null">
				,DICTDESC 
			</if>
			<if test="code != null">
				,CODE 
			</if>
			<if test="sort != null">
				,SORT 
			</if>
			<if test="blocked != null">
				,BLOCKED 
			</if>
			<if test="ext1 != null">
				,EXT1 
			</if>
			<if test="ext2 != null">
				,EXT2 
			</if>
			<if test="ext3 != null">
				,EXT3 
			</if>
			<if test="ext4 != null">
				,EXT4 
			</if>
			<if test="ext5 != null">
				,EXT5 
			</if>
			<if test="ext6 != null">
				,EXT6 
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=BIGINT}
	     
			<if test="typeId != null">
				,#{typeId, jdbcType=BIGINT}
			</if>
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="desc != null">
				,#{desc, jdbcType=VARCHAR}
			</if>
			<if test="code != null">
				,#{code, jdbcType=VARCHAR}
			</if>
			<if test="sort != null">
				,#{sort, jdbcType=INTEGER}
			</if>
			<if test="blocked != null">
				,#{blocked, jdbcType=INTEGER}
			</if>
			<if test="ext1 != null">
				,#{ext1, jdbcType=VARCHAR}
			</if>
			<if test="ext2 != null">
				,#{ext2, jdbcType=VARCHAR}
			</if>
			<if test="ext3 != null">
				,#{ext3, jdbcType=VARCHAR}
			</if>
			<if test="ext4 != null">
				,#{ext4, jdbcType=VARCHAR}
			</if>
			<if test="ext5 != null">
				,#{ext5, jdbcType=TIMESTAMP}
			</if>
			<if test="ext6 != null">
				,#{ext6, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>

	 
	<update id="updateDictory" parameterType="com.glaf.base.modules.sys.model.Dictory">
		update sys_dictory
		set
		<trim prefix="" suffix="" suffixOverrides=",">		
			<if test="typeId != null">
				TYPEID = #{typeId, jdbcType=BIGINT},
			</if>
			<if test="name != null">
				NAME = #{name, jdbcType=VARCHAR},
			</if>
			<if test="desc != null">
				DICTDESC = #{desc, jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				CODE = #{code, jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				SORT = #{sort, jdbcType=INTEGER},
			</if>
			<if test="blocked != null">
				BLOCKED = #{blocked, jdbcType=INTEGER},
			</if>
			<if test="ext1 != null">
				EXT1 = #{ext1, jdbcType=VARCHAR},
			</if>
			<if test="ext2 != null">
				EXT2 = #{ext2, jdbcType=VARCHAR},
			</if>
			<if test="ext3 != null">
				EXT3 = #{ext3, jdbcType=VARCHAR},
			</if>
			<if test="ext4 != null">
				EXT4 = #{ext4, jdbcType=VARCHAR},
			</if>
			<if test="ext5 != null">
				EXT5 = #{ext5, jdbcType=TIMESTAMP},
			</if>
			<if test="ext6 != null">
				EXT6 = #{ext6, jdbcType=TIMESTAMP},
			</if>
		</trim>
		where
          ID = #{id, jdbcType=BIGINT}
		
	</update>

 
	<delete id="deleteDictoryById" parameterType="long"> 
        delete from sys_dictory
        where ID =	#{id}
	</delete>
	
	<delete id="deleteDictorys" parameterType="com.glaf.base.modules.sys.query.DictoryQuery">
		delete from sys_dictory
		where ( 
 			  ID IN
		<foreach item="x_rowId" index="index" collection="rowIds" 
			open="(" separator="," close=")">
                  #{x_rowId}
		</foreach>
		)
	</delete>

	<select id="getDictoryById" parameterType="long" resultMap="dictoryResultMap">
		select * from sys_dictory where ID = #{id}
	</select>


	<select id="getDictorys" 
		parameterType="com.glaf.base.modules.sys.query.DictoryQuery"
		resultMap="dictoryResultMap">
		select E.*
		<include refid="selectDictorysSql" />
		<choose>
			<when test="orderBy != null">
		     order by ${orderBy}
			</when>
			<otherwise>
		      order by E.SORT asc
			</otherwise>
		</choose>
	</select>

	<select id="getDictoryCount" 
		parameterType="com.glaf.base.modules.sys.query.DictoryQuery"
		resultType="int">
		select count(*)
		<include refid="selectDictorysSql" />
	</select>

	<sql id="selectDictorysSql">

		from sys_dictory E
		 
		<where>
		       1 = 1  

			<if test="typeId != null">
				and E.TYPEID = #{typeId}
			</if>

			<if test="typeIdGreaterThanOrEqual != null">
				and E.TYPEID &gt;= #{typeIdGreaterThanOrEqual}
			</if>

			<if test="typeIdLessThanOrEqual != null">
				and E.TYPEID &lt;= #{typeIdLessThanOrEqual}
			</if>

			<if test="typeIds != null and typeIds.size() &gt; 0">
			    and E.TYPEID IN
				<foreach item="x_typeId" index="index" collection="typeIds" 
					open="(" separator="," close=")">
                  #{x_typeId}
				</foreach>
			</if>
	        
			<if test="name != null and name != '' ">
				and E.NAME = #{name}
			</if>

			<if test="nameLike != null and nameLike != '' ">
				and E.NAME like #{nameLike}
			</if>

			<if test="names != null and names.size() &gt; 0">
			    and E.NAME IN
				<foreach item="x_name" index="index" collection="names" 
					open="(" separator="," close=")">
                  #{x_name}
				</foreach>
			</if>
	        
			<if test="desc != null and desc != '' ">
				and E.DICTDESC = #{desc}
			</if>

			<if test="descLike != null and descLike != '' ">
				and E.DICTDESC like #{descLike}
			</if>
	        
			<if test="code != null and code != '' ">
				and E.CODE = #{code}
			</if>

			<if test="codeLike != null and codeLike != '' ">
				and E.CODE like #{codeLike}
			</if>

			<if test="codes != null and codes.size() &gt; 0">
			    and E.CODE IN
				<foreach item="x_code" index="index" collection="codes" 
					open="(" separator="," close=")">
                  #{x_code}
				</foreach>
			</if>


			<if test="sortGreaterThanOrEqual != null">
				and E.SORT &gt;= #{sortGreaterThanOrEqual}
			</if>
            
			<if test="sortGreaterThan != null">
				and E.SORT &gt; #{sortGreaterThan}
			</if>

			<if test="sortLessThanOrEqual != null">
				and E.SORT &lt;= #{sortLessThanOrEqual}
			</if>
            
			<if test="sortLessThan != null">
				and E.SORT &lt; #{sortLessThan}
			</if>
		
			<if test="blocked != null">
				and E.BLOCKED = #{blocked}
			</if>
     
			<if test="ext1 != null and ext1 != '' ">
				and E.EXT1 = #{ext1}
			</if>

			<if test="ext1Like != null and ext1Like != '' ">
				and E.EXT1 like #{ext1Like}
			</if>		
	        
			<if test="ext2 != null and ext2 != '' ">
				and E.EXT2 = #{ext2}
			</if>

			<if test="ext2Like != null and ext2Like != '' ">
				and E.EXT2 like #{ext2Like}
			</if>
	      
			<if test="ext3 != null and ext3 != '' ">
				and E.EXT3 = #{ext3}
			</if>

			<if test="ext3Like != null and ext3Like != '' ">
				and E.EXT3 like #{ext3Like}
			</if>

			<if test="ext4 != null and ext4 != '' ">
				and E.EXT4 = #{ext4}
			</if>

			<if test="ext4Like != null and ext4Like != '' ">
				and E.EXT4 like #{ext4Like}
			</if>
		
			<if test="ext5 != null">
				and E.EXT5 = #{ext5}
			</if>

			<if test="ext5GreaterThanOrEqual != null">
				and E.EXT5 &gt;= #{ext5GreaterThanOrEqual}
			</if>

			<if test="ext5LessThanOrEqual != null">
				and E.EXT5 &lt;= #{ext5LessThanOrEqual}
			</if>

			<if test="ext6 != null">
				and E.EXT6 = #{ext6}
			</if>

			<if test="ext6GreaterThanOrEqual != null">
				and E.EXT6 &gt;= #{ext6GreaterThanOrEqual}
			</if>

			<if test="ext6LessThanOrEqual != null">
				and E.EXT6 &lt;= #{ext6LessThanOrEqual}
			</if>
			 
		</where>
	</sql>

</mapper>