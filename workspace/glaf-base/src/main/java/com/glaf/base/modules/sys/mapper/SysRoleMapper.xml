<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.base.modules.sys.mapper.SysRoleMapper">

	<resultMap id="sysRoleResultMap" type="com.glaf.base.modules.sys.model.SysRole">
		<id property="id" column="ID" jdbcType="BIGINT" />
		<result property="name" column="NAME" jdbcType="VARCHAR" />
		<result property="desc" column="ROLEDESC" jdbcType="VARCHAR" />
		<result property="code" column="CODE" jdbcType="VARCHAR" />
		<result property="sort" column="SORT" jdbcType="INTEGER" />
		<result property="createDate" column="CREATEDATE" jdbcType="TIMESTAMP" />
		<result property="createBy" column="CREATEBY" jdbcType="VARCHAR" />
		<result property="updateBy" column="UPDATEBY" jdbcType="VARCHAR" />
		<result property="updateDate" column="UPDATEDATE" jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertSysRole" parameterType="com.glaf.base.modules.sys.model.SysRole">
		insert into SYS_ROLE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID
			<if test="name != null">
				,NAME
			</if>
			<if test="desc != null">
				,ROLEDESC
			</if>
			<if test="code != null">
				,CODE
			</if>
			<if test="sort != null">
				,SORT
			</if>
			<if test="createDate != null">
				,CREATEDATE
			</if>
			<if test="createBy != null">
				,CREATEBY
			</if>
			<if test="updateBy != null">
				,UPDATEBY
			</if>
			<if test="updateDate != null">
				,UPDATEDATE
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=BIGINT}

			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="desc != null">
				,#{desc, jdbcType=VARCHAR}
			</if>
			<if test="code != null">
				,#{code, jdbcType=VARCHAR}
			</if>
			<if test="sort != null">
				,#{sort, jdbcType=INTEGER}
			</if>
			<if test="createDate != null">
				,#{createDate, jdbcType=TIMESTAMP}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
			<if test="updateDate != null">
				,#{updateDate, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<update id="updateSysRole" parameterType="com.glaf.base.modules.sys.model.SysRole">
		update SYS_ROLE
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="name != null">
				NAME = #{name, jdbcType=VARCHAR},
			</if>
			<if test="desc != null">
				ROLEDESC = #{desc, jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				CODE = #{code, jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				SORT = #{sort, jdbcType=INTEGER},
			</if>
			<if test="updateBy != null">
				UPDATEBY = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				UPDATEDATE = #{updateDate, jdbcType=TIMESTAMP},
			</if>
		</trim>
		where
		ID = #{id, jdbcType=BIGINT}

	</update>


	<delete id="deleteSysRoleById" parameterType="long">
		delete from
		SYS_ROLE
		where ID = #{id}
	</delete>


	<delete id="deleteSysRoles" parameterType="com.glaf.base.modules.sys.query.SysRoleQuery">
		delete from SYS_ROLE
		where (
		ID IN
		<foreach item="x_rowId" index="index" collection="rowIds"
			open="(" separator="," close=")">
			#{x_rowId}
		</foreach>
		)
	</delete>


	<select id="getSysRoleById" parameterType="long" resultMap="sysRoleResultMap">
		select * from SYS_ROLE where ID = #{id}
	</select>


	<select id="getSysRolesOfDepts" parameterType="com.glaf.base.modules.sys.query.SysDepartmentQuery"
		resultMap="sysRoleResultMap">

		select R.* from SYS_ROLE R
		inner join SYS_DEPT_ROLE DR
		on DR.SYSROLEID = R.ID
		inner join SYS_DEPARTMENT D
		on DR.DEPTID = D.ID
		where 1=1

		<choose>
			<when test="nodeIds != null and nodeIds.size !=0 ">
				and D.NODEID IN
				<foreach item="x_nodeId" index="index" collection="nodeIds"
					open="(" separator="," close=")">
					#{x_nodeId}
				</foreach>
			</when>
			<otherwise>
				and D.NODEID = #{nodeId}
			</otherwise>
		</choose>

	</select>


	<select id="getSysRolesOfDeptRole" parameterType="long"
		resultMap="sysRoleResultMap">

		select * from SYS_ROLE E
		inner join SYS_DEPT_ROLE R
		on E.ID =
		R.SYSROLEID
		where E.ID = #{id}

	</select>

	<select id="getSysRolesOfUser" parameterType="string" resultMap="sysRoleResultMap">

		select E.* from SYS_ROLE E
		inner join SYS_DEPT_ROLE R
		on E.ID =
		R.SYSROLEID
		inner join SYS_USER_ROLE UR
		on R.ID = UR.ROLEID
		inner join
		SYS_USER U
		on UR.USERID=U.ID
		where U.ACCOUNT=#{acorId}

	</select>


	<select id="getSysRoles" parameterType="com.glaf.base.modules.sys.query.SysRoleQuery"
		resultMap="sysRoleResultMap">
		select E.*
		<include refid="selectSysRolesSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.SORT desc
			</otherwise>
		</choose>
	</select>


	<select id="getSysRoleCount" parameterType="com.glaf.base.modules.sys.query.SysRoleQuery"
		resultType="int">
		select count(*)
		<include refid="selectSysRolesSql" />
	</select>


	<sql id="selectSysRolesSql">

		from SYS_ROLE E

		<where>
			1 = 1

			<if test="name != null and name != '' ">
				and E.NAME = #{name}
			</if>

			<if test="nameLike != null and nameLike != '' ">
				and E.NAME like #{nameLike}
			</if>

			<if test="names != null and names.size != 0">
				and E.NAME IN
				<foreach item="x_name" index="index" collection="names"
					open="(" separator="," close=")">
					#{x_name}
				</foreach>
			</if>

			<if test="descLike != null and descLike != '' ">
				and E.ROLEDESC like #{descLike}
			</if>

			<if test="code != null and code != '' ">
				and E.CODE = #{code}
			</if>

			<if test="codeLike != null and codeLike != '' ">
				and E.CODE like #{codeLike}
			</if>

			<if test="codes != null and codes.size != 0">
				and E.CODE IN
				<foreach item="x_code" index="index" collection="codes"
					open="(" separator="," close=")">
					#{x_code}
				</foreach>
			</if>

			<if test="sortGreaterThanOrEqual != null">
				and E.SORT &gt;= #{sortGreaterThanOrEqual}
			</if>

			<if test="sortGreaterThan  != null">
				and E.SORT &gt; #{sortGreaterThan}
			</if>

			<if test="sortLessThanOrEqual != null">
				and E.SORT &lt;= #{sortLessThanOrEqual}
			</if>

			<if test="sortLessThan != null">
				and E.SORT &lt; #{sortLessThan}
			</if>

		</where>
	</sql>

</mapper>