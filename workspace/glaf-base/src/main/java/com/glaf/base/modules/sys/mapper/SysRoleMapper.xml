<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.base.modules.sys.mapper.SysRoleMapper">

	<resultMap id="sysRoleResultMap"	type="com.glaf.base.modules.sys.model.SysRole">
		<id property="id" column="ID" jdbcType="BIGINT" />
		<result property="name" column="NAME" jdbcType="VARCHAR"/>
		<result property="desc" column="ROLEDESC" jdbcType="VARCHAR"/>
		<result property="code" column="CODE" jdbcType="VARCHAR"/>
		<result property="sort" column="SORT" jdbcType="INTEGER"/>
	</resultMap>

 
	<insert id="insertSysRole" parameterType="com.glaf.base.modules.sys.model.SysRole">
		insert into sys_role 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    ID
			<if test="name != null">
				,NAME 
			</if>
			<if test="desc != null">
				,ROLEDESC 
			</if>
			<if test="code != null">
				,CODE 
			</if>
			<if test="sort != null">
				,SORT 
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=BIGINT}
	     
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="desc != null">
				,#{desc, jdbcType=VARCHAR}
			</if>
			<if test="code != null">
				,#{code, jdbcType=VARCHAR}
			</if>
			<if test="sort != null">
				,#{sort, jdbcType=INTEGER}
			</if>
		</trim>
	</insert>

	 
	<update id="updateSysRole" parameterType="com.glaf.base.modules.sys.model.SysRole">
		update sys_role
		set
		<trim prefix="" suffix="" suffixOverrides=",">		
			<if test="name != null">
				NAME = #{name, jdbcType=VARCHAR},
			</if>
			<if test="desc != null">
				ROLEDESC = #{desc, jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				CODE = #{code, jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				SORT = #{sort, jdbcType=INTEGER},
			</if>
		</trim>
		where
          ID = #{id, jdbcType=BIGINT}
		
	</update>

 
	<delete id="deleteSysRoleById" parameterType="long"> 
        delete from sys_role
        where ID =	#{id}
	</delete>
	
	
	<delete id="deleteSysRoles" parameterType="com.glaf.base.modules.sys.query.SysRoleQuery">
		delete from sys_role
		where ( 
 			  ID IN
		<foreach item="x_rowId" index="index" collection="rowIds" 
			open="(" separator="," close=")">
                  #{x_rowId}
		</foreach>
		)
	</delete>
	

	<select id="getSysRoleById" parameterType="long" resultMap="sysRoleResultMap">
		select * from sys_role where ID = #{id}
	</select>
	
	
	<select id="getSysRolesOfDeptRole" parameterType="long" resultMap="sysRoleResultMap">
		
		select * from sys_role E
		inner join sys_dept_role R
		on E.ID = R.SYSROLEID
		where E.ID = #{id}

	</select>


	<select id="getSysRoles" 
		parameterType="com.glaf.base.modules.sys.query.SysRoleQuery"
		resultMap="sysRoleResultMap">
		select E.*
		<include refid="selectSysRolesSql" />
		<choose>
			<when test="orderBy != null">
		     order by ${orderBy}
			</when>
			<otherwise>
		      order by E.SORT asc
			</otherwise>
		</choose>
	</select>
	

	<select id="getSysRoleCount" 
		parameterType="com.glaf.base.modules.sys.query.SysRoleQuery"
		resultType="int">
		select count(*)
		<include refid="selectSysRolesSql" />
	</select>
	

	<sql id="selectSysRolesSql">

		from sys_role E
		 
		<where>
		       1 = 1  

			<if test="name != null and name != '' ">
				and E.NAME = #{name}
			</if>

			<if test="nameLike != null and nameLike != '' ">
				and E.NAME like #{nameLike}
			</if>

			<if test="names != null and names.size() &gt; 0">
			    and E.NAME IN
				<foreach item="x_name" index="index" collection="names" 
					open="(" separator="," close=")">
                  #{x_name}
				</foreach>
			</if>

			<if test="descLike != null and descLike != '' ">
				and E.ROLEDESC like #{descLike}
			</if>

			<if test="code != null and code != '' ">
				and E.CODE = #{code}
			</if>

			<if test="codeLike != null and codeLike != '' ">
				and E.CODE like #{codeLike}
			</if>

			<if test="codes != null and codes.size() &gt; 0">
			    and E.CODE IN
				<foreach item="x_code" index="index" collection="codes" 
					open="(" separator="," close=")">
                  #{x_code}
				</foreach>
			</if>

			<if test="sortGreaterThanOrEqual != null">
				and E.SORT &gt;= #{sortGreaterThanOrEqual}
			</if>
            
			<if test="sortGreaterThan  != null">
				and E.SORT &gt; #{sortGreaterThan}
			</if>

			<if test="sortLessThanOrEqual != null">
				and E.SORT &lt;= #{sortLessThanOrEqual}
			</if>
            
			<if test="sortLessThan != null">
				and E.SORT &lt; #{sortLessThan}
			</if>
			 
		</where>
	</sql>

</mapper>