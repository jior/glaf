<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.base.modules.sys.mapper.SysTreeMapper">

	<resultMap id="sysTreeResultMap" type="com.glaf.base.modules.sys.model.SysTree">
		<id property="id" column="ID" jdbcType="BIGINT" />
		<result property="parentId" column="PARENT" jdbcType="BIGINT" />
		<result property="name" column="NAME" jdbcType="VARCHAR" />
		<result property="desc" column="NODEDESC" jdbcType="VARCHAR" />
		<result property="discriminator" column="DISCRIMINATOR"
			jdbcType="VARCHAR" />
		<result property="cacheFlag" column="CACHEFLAG" jdbcType="VARCHAR" />
		<result property="moveable" column="MOVEABLE" jdbcType="VARCHAR" />
		<result property="treeId" column="TREEID" jdbcType="VARCHAR" />
		<result property="sort" column="SORT" jdbcType="INTEGER" />
		<result property="code" column="CODE" jdbcType="VARCHAR" />
		<result property="icon" column="icon" jdbcType="VARCHAR" />
		<result property="iconCls" column="iconCls" jdbcType="VARCHAR" />
		<result property="url" column="url" jdbcType="VARCHAR" />
		<result property="locked" column="locked" jdbcType="INTEGER" />
		<result property="createDate" column="CREATEDATE" jdbcType="TIMESTAMP" />
		<result property="createBy" column="CREATEBY" jdbcType="VARCHAR" />
		<result property="updateBy" column="UPDATEBY" jdbcType="VARCHAR" />
		<result property="updateDate" column="UPDATEDATE" jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertSysTree" parameterType="com.glaf.base.modules.sys.model.SysTree">
		insert into sys_tree
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID
			<if test="parentId != null">
				,PARENT
			</if>
			<if test="name != null">
				,NAME
			</if>
			<if test="desc != null">
				,NODEDESC
			</if>
			<if test="discriminator != null">
				,DISCRIMINATOR
			</if>
			<if test="cacheFlag != null">
				,CACHEFLAG
			</if>
			<if test="moveable != null">
				,MOVEABLE
			</if>
			<if test="treeId != null">
				,TREEID
			</if>
			<if test="sort != null">
				,SORT
			</if>
			<if test="code != null">
				,CODE
			</if>
			<if test="icon != null">
				,icon
			</if>
			<if test="iconCls != null">
				,iconCls
			</if>
			<if test="url != null">
				,url
			</if>
			<if test="locked != null">
				,locked
			</if>
			<if test="createDate != null">
				,CREATEDATE
			</if>
			<if test="createBy != null">
				,CREATEBY
			</if>
			<if test="updateBy != null">
				,UPDATEBY
			</if>
			<if test="updateDate != null">
				,UPDATEDATE
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=BIGINT}

			<if test="parentId != null">
				,#{parentId, jdbcType=BIGINT}
			</if>
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="desc != null">
				,#{desc, jdbcType=VARCHAR}
			</if>
			<if test="discriminator != null">
				,#{discriminator, jdbcType=VARCHAR}
			</if>
			<if test="cacheFlag != null">
				,#{cacheFlag, jdbcType=VARCHAR}
			</if>
			<if test="moveable != null">
				,#{moveable, jdbcType=VARCHAR}
			</if>
			<if test="treeId != null">
				,#{treeId, jdbcType=VARCHAR}
			</if>
			<if test="sort != null">
				,#{sort, jdbcType=INTEGER}
			</if>
			<if test="code != null">
				,#{code, jdbcType=VARCHAR}
			</if>
			<if test="icon != null">
				,#{icon, jdbcType=VARCHAR}
			</if>
			<if test="iconCls != null">
				,#{iconCls, jdbcType=VARCHAR}
			</if>
			<if test="url != null">
				,#{url, jdbcType=VARCHAR}
			</if>
			<if test="locked != null">
				,#{locked, jdbcType=INTEGER}
			</if>
			<if test="createDate != null">
				,#{createDate, jdbcType=TIMESTAMP}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="updateBy != null">
				,#{updateBy, jdbcType=VARCHAR}
			</if>
			<if test="updateDate != null">
				,#{updateDate, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<update id="updateSysTree" parameterType="com.glaf.base.modules.sys.model.SysTree">
		update sys_tree
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="parentId != null">
				PARENT = #{parentId, jdbcType=BIGINT},
			</if>
			<if test="name != null">
				NAME = #{name, jdbcType=VARCHAR},
			</if>
			<if test="desc != null">
				NODEDESC = #{desc, jdbcType=VARCHAR},
			</if>
			<if test="cacheFlag != null">
				CACHEFLAG = #{cacheFlag, jdbcType=VARCHAR},
			</if>
			<if test="discriminator != null">
				DISCRIMINATOR = #{discriminator, jdbcType=VARCHAR},
			</if>
			<if test="treeId != null">
				TREEID = #{treeId, jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				SORT = #{sort, jdbcType=INTEGER},
			</if>
			<if test="code != null">
				CODE = #{code, jdbcType=VARCHAR},
			</if>
			<if test="icon != null">
				icon = #{icon, jdbcType=VARCHAR},
			</if>
			<if test="iconCls != null">
				iconCls = #{iconCls, jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				url = #{url, jdbcType=VARCHAR},
			</if>
			<if test="locked != null">
				locked = #{locked, jdbcType=INTEGER},
			</if>
			<if test="updateBy != null">
				UPDATEBY = #{updateBy, jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				UPDATEDATE = #{updateDate, jdbcType=TIMESTAMP},
			</if>
		</trim>
		where
		ID = #{id, jdbcType=BIGINT}

	</update>


	<delete id="deleteSysTreeById" parameterType="long">
		delete from
		sys_tree where ID = #{id}
	</delete>

	<delete id="deleteSysTrees" parameterType="com.glaf.base.modules.sys.query.SysTreeQuery">
		delete from sys_tree
		where (
		ID IN
		<foreach item="x_rowId" index="index" collection="rowIds"
			open="(" separator="," close=")">
			#{x_rowId}
		</foreach>
		)
	</delete>

	<select id="getSysTreeById" parameterType="long" resultMap="sysTreeResultMap">
		select * from sys_tree where ID = #{id}
	</select>


	<select id="getDictorySysTrees" parameterType="com.glaf.base.modules.sys.query.SysTreeQuery"
		resultMap="sysTreeResultMap">

		select distinct E.* from sys_tree E
		inner join sys_dictory D
		on E.ID =
		D.TYPEID
		where 1=1

		<include refid="getSysTreesSql" />

	</select>

	<select id="getDepartmentSysTrees" parameterType="com.glaf.base.modules.sys.query.SysTreeQuery"
		resultMap="sysTreeResultMap">

		select distinct E.* from sys_tree E
		inner join sys_department D
		on E.ID
		=D.NODEID
		where 1=1

		<include refid="getSysTreesSql" />

		order by E.PARENT asc, E.SORT asc

	</select>


	<select id="getApplicationSysTrees" parameterType="com.glaf.base.modules.sys.query.SysTreeQuery"
		resultMap="sysTreeResultMap">

		select distinct E.* from sys_tree E
		inner join
		sys_application D
		on E.ID
		= D.NODEID
		where 1=1

		<include refid="getSysTreesSql" />

		order by E.PARENT asc, E.SORT asc

	</select>


	<select id="getRelationSysTrees" parameterType="com.glaf.base.modules.sys.query.SysTreeQuery"
		resultMap="sysTreeResultMap">

		select distinct E.* from sys_tree E
		inner join ${relationTable} R
		on
		E.ID = R.${relationColumn}
		where 1=1

		<include refid="getSysTreesSql" />

		order by E.PARENT asc, E.SORT asc

	</select>


	<select id="getSysTrees" parameterType="com.glaf.base.modules.sys.query.SysTreeQuery"
		resultMap="sysTreeResultMap">
		select E.*
		<include refid="selectSysTreesSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.SORT asc
			</otherwise>
		</choose>
	</select>

	<select id="getSysTreeCount" parameterType="com.glaf.base.modules.sys.query.SysTreeQuery"
		resultType="int">
		select count(*)
		<include refid="selectSysTreesSql" />
	</select>

	<sql id="selectSysTreesSql">

		from sys_tree E

		<if test=" departmentStatus != null  ">
			inner join sys_department D
			on D.NODEID = E.ID
		</if>

		<where>
			1 = 1

			<if test=" departmentStatus != null  ">
				and D.STATUS = #{departmentStatus}
			</if>

			<if test="parentId != null">
				and E.PARENT = #{parentId}
			</if>

			<if test="parentIds != null and parentIds.size() &gt; 0">
				and E.PARENT IN
				<foreach item="x_parentId" index="index" collection="parentIds"
					open="(" separator="," close=")">
					#{x_parentId}
				</foreach>
			</if>

			<if test="discriminator != null and discriminator != '' ">
				and E.DISCRIMINATOR = #{discriminator}
			</if>

			<if test="name != null and name != '' ">
				and E.NAME = #{name}
			</if>

			<if test="nameLike != null and nameLike != '' ">
				and E.NAME like #{nameLike}
			</if>

			<if test="names != null and names.size() &gt; 0">
				and E.NAME IN
				<foreach item="x_name" index="index" collection="names"
					open="(" separator="," close=")">
					#{x_name}
				</foreach>
			</if>

			<if test="descLike != null and descLike != '' ">
				and E.NODEDESC like #{descLike}
			</if>

			<if test="sortGreaterThanOrEqual != null">
				and E.SORT &gt;= #{sortGreaterThanOrEqual}
			</if>

			<if test="sortGreaterThan != null">
				and E.SORT &gt; #{sortGreaterThan}
			</if>

			<if test="sortLessThanOrEqual != null">
				and E.SORT &lt;= #{sortLessThanOrEqual}
			</if>

			<if test="sortLessThan != null">
				and E.SORT &lt; #{sortLessThan}
			</if>

			<if test="code != null and code != '' ">
				and E.CODE = #{code}
			</if>

			<if test="codeLike != null and codeLike != '' ">
				and E.CODE like #{codeLike}
			</if>

			<if test="codes != null and codes.size() &gt; 0">
				and E.CODE IN
				<foreach item="x_code" index="index" collection="codes"
					open="(" separator="," close=")">
					#{x_code}
				</foreach>
			</if>

			<if test="treeIdLike != null and treeIdLike != '' ">
				and E.TREEID like #{treeIdLike}
			</if>

			<if test="urlLike != null and urlLike != '' ">
				and E.url like #{urlLike}
			</if>

			<if test="locked != null">
				and E.locked = #{locked}
			</if>

			<if test="lockedGreaterThanOrEqual != null">
				and E.locked &gt;= #{lockedGreaterThanOrEqual}
			</if>

			<if test="lockedLessThanOrEqual != null">
				and E.locked &lt;= #{lockedLessThanOrEqual}
			</if>

		</where>
	</sql>


	<sql id="getSysTreesSql">

		<if test="parentId != null">
			and E.PARENT = #{parentId}
		</if>

		<if test="parentIds != null and parentIds.size() &gt; 0">
			and E.PARENT IN
			<foreach item="x_parentId" index="index" collection="parentIds"
				open="(" separator="," close=")">
				#{x_parentId}
			</foreach>
		</if>

		<if test="discriminator != null and discriminator != '' ">
			and E.DISCRIMINATOR = #{discriminator}
		</if>

		<if test="name != null and name != '' ">
			and E.NAME = #{name}
		</if>

		<if test="nameLike != null and nameLike != '' ">
			and E.NAME like #{nameLike}
		</if>

		<if test="names != null and names.size() &gt; 0">
			and E.NAME IN
			<foreach item="x_name" index="index" collection="names" open="("
				separator="," close=")">
				#{x_name}
			</foreach>
		</if>

		<if test="descLike != null and descLike != '' ">
			and E.NODEDESC like #{descLike}
		</if>

		<if test="sortGreaterThanOrEqual != null">
			and E.SORT &gt;= #{sortGreaterThanOrEqual}
		</if>

		<if test="sortGreaterThan != null">
			and E.SORT &gt; #{sortGreaterThan}
		</if>

		<if test="sortLessThanOrEqual != null">
			and E.SORT &lt;= #{sortLessThanOrEqual}
		</if>

		<if test="sortLessThan != null">
			and E.SORT &lt; #{sortLessThan}
		</if>

		<if test="code != null and code != '' ">
			and E.CODE = #{code}
		</if>

		<if test="codeLike != null and codeLike != '' ">
			and E.CODE like #{codeLike}
		</if>

		<if test="codes != null and codes.size() &gt; 0">
			and E.CODE IN
			<foreach item="x_code" index="index" collection="codes" open="("
				separator="," close=")">
				#{x_code}
			</foreach>
		</if>

		<if test="treeIdLike != null and treeIdLike != '' ">
			and E.TREEID like #{treeIdLike}
		</if>

		<if test="urlLike != null and urlLike != '' ">
			and E.url like #{urlLike}
		</if>

		<if test="locked != null">
			and E.locked = #{locked}
		</if>

		<if test="lockedGreaterThanOrEqual != null">
			and E.locked &gt;= #{lockedGreaterThanOrEqual}
		</if>

		<if test="lockedLessThanOrEqual != null">
			and E.locked &lt;= #{lockedLessThanOrEqual}
		</if>

	</sql>

</mapper>