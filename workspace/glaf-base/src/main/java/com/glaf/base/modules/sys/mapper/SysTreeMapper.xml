<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.base.modules.sys.mapper.SysTreeMapper">

	<resultMap id="sysTreeResultMap"	type="com.glaf.base.modules.sys.model.SysTree">
		<id property="id" column="ID" jdbcType="BIGINT" />
		<result property="parent" column="PARENT" jdbcType="BIGINT"/>
		<result property="name" column="NAME" jdbcType="VARCHAR"/>
		<result property="desc" column="NODEDESC" jdbcType="VARCHAR"/>
		<result property="sort" column="SORT" jdbcType="INTEGER"/>
		<result property="code" column="CODE" jdbcType="VARCHAR"/>
		<result property="icon" column="icon" jdbcType="VARCHAR"/>
		<result property="iconCls" column="iconCls" jdbcType="VARCHAR"/>
		<result property="url" column="url" jdbcType="VARCHAR"/>
		<result property="locked" column="locked" jdbcType="INTEGER"/>
	</resultMap>

 
	<insert id="insertSysTree" parameterType="com.glaf.base.modules.sys.model.SysTree">
		insert into sys_tree 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    ID
			<if test="parent != null">
				,PARENT 
			</if>
			<if test="name != null">
				,NAME 
			</if>
			<if test="desc != null">
				,NODEDESC 
			</if>
			<if test="sort != null">
				,SORT 
			</if>
			<if test="code != null">
				,CODE 
			</if>
			<if test="icon != null">
				,icon 
			</if>
			<if test="iconCls != null">
				,iconCls 
			</if>
			<if test="url != null">
				,url 
			</if>
			<if test="locked != null">
				,locked 
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=BIGINT}
	     
			<if test="parent != null">
				,#{parent, jdbcType=BIGINT}
			</if>
			<if test="name != null">
				,#{name, jdbcType=VARCHAR}
			</if>
			<if test="desc != null">
				,#{desc, jdbcType=VARCHAR}
			</if>
			<if test="sort != null">
				,#{sort, jdbcType=INTEGER}
			</if>
			<if test="code != null">
				,#{code, jdbcType=VARCHAR}
			</if>
			<if test="icon != null">
				,#{icon, jdbcType=VARCHAR}
			</if>
			<if test="iconCls != null">
				,#{iconCls, jdbcType=VARCHAR}
			</if>
			<if test="url != null">
				,#{url, jdbcType=VARCHAR}
			</if>
			<if test="locked != null">
				,#{locked, jdbcType=INTEGER}
			</if>
		</trim>
	</insert>

	 
	<update id="updateSysTree" parameterType="com.glaf.base.modules.sys.model.SysTree">
		update sys_tree
		set
		<trim prefix="" suffix="" suffixOverrides=",">		
			<if test="parent != null">
				PARENT = #{parent, jdbcType=BIGINT},
			</if>
			<if test="name != null">
				NAME = #{name, jdbcType=VARCHAR},
			</if>
			<if test="desc != null">
				NODEDESC = #{desc, jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				SORT = #{sort, jdbcType=INTEGER},
			</if>
			<if test="code != null">
				CODE = #{code, jdbcType=VARCHAR},
			</if>
			<if test="icon != null">
				icon = #{icon, jdbcType=VARCHAR},
			</if>
			<if test="iconCls != null">
				iconCls = #{iconCls, jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				url = #{url, jdbcType=VARCHAR},
			</if>
			<if test="locked != null">
				locked = #{locked, jdbcType=INTEGER},
			</if>
		</trim>
		where
          ID = #{id, jdbcType=BIGINT}
		
	</update>

 
	<delete id="deleteSysTreeById" parameterType="long"> 
        delete from sys_tree where ID =	#{id}
	</delete>
	
	<delete id="deleteSysTrees" parameterType="com.glaf.base.modules.sys.query.SysTreeQuery">
		delete from sys_tree
		where ( 
 			  ID IN
		<foreach item="x_rowId" index="index" collection="rowIds" 
			open="(" separator="," close=")">
                  #{x_rowId}
		</foreach>
		)
	</delete>

	<select id="getSysTreeById" parameterType="long" resultMap="sysTreeResultMap">
		select * from sys_tree where ID = #{id}
	</select>


	<select id="getSysTrees" 
		parameterType="com.glaf.base.modules.sys.query.SysTreeQuery"
		resultMap="sysTreeResultMap">
		select E.*
		<include refid="selectSysTreesSql" />
		<choose>
			<when test="orderBy != null">
		     order by ${orderBy}
			</when>
			<otherwise>
		      order by E.SORT asc
			</otherwise>
		</choose>
	</select>

	<select id="getSysTreeCount" 
		parameterType="com.glaf.base.modules.sys.query.SysTreeQuery"
		resultType="int">
		select count(*)
		<include refid="selectSysTreesSql" />
	</select>

	<sql id="selectSysTreesSql">

		from sys_tree E

		<if test=" departmentStatus != null  ">
           inner join sys_department D
		   on D.NODEID = E.ID
		</if>
		 
		<where>
		       1 = 1  

			<if test=" departmentStatus != null  ">
                and D.STATUS = #{departmentStatus}
			</if>

			<if test="parentId != null">
				and E.PARENT = #{parentId}
			</if>

			<if test="parentIds != null &amp;&amp; parentIds.size() &gt; 0">
			    and E.PARENT IN
				<foreach item="x_parentId" index="index" collection="parentIds" 
					open="(" separator="," close=")">
                  #{x_parentId}
				</foreach>
			</if>
	        
			<if test="name != null &amp;&amp; name != '' ">
				and E.NAME = #{name}
			</if>

			<if test="nameLike != null &amp;&amp; nameLike != '' ">
				and E.NAME like #{nameLike}
			</if>

			<if test="names != null &amp;&amp; names.size() &gt; 0">
			    and E.NAME IN
				<foreach item="x_name" index="index" collection="names" 
					open="(" separator="," close=")">
                  #{x_name}
				</foreach>
			</if>

			<if test="descLike != null &amp;&amp; descLike != '' ">
				and E.NODEDESC like #{descLike}
			</if>

			<if test="sortGreaterThanOrEqual != null">
				and E.SORT &gt;= #{sortGreaterThanOrEqual}
			</if>
			
			<if test="sortGreaterThan != null">
				and E.SORT &gt; #{sortGreaterThan}
			</if>

			<if test="sortLessThanOrEqual != null">
				and E.SORT &lt;= #{sortLessThanOrEqual}
			</if>
			
			<if test="sortLessThan != null">
				and E.SORT &lt; #{sortLessThan}
			</if>
	        
			<if test="code != null &amp;&amp; code != '' ">
				and E.CODE = #{code}
			</if>

			<if test="codeLike != null &amp;&amp; codeLike != '' ">
				and E.CODE like #{codeLike}
			</if>

			<if test="codes != null &amp;&amp; codes.size() &gt; 0">
			    and E.CODE IN
				<foreach item="x_code" index="index" collection="codes" 
					open="(" separator="," close=")">
                  #{x_code}
				</foreach>
			</if>
	        
			<if test="urlLike != null &amp;&amp; urlLike != '' ">
				and E.url like #{urlLike}
			</if>

			<if test="locked != null">
				and E.locked = #{locked}
			</if>

			<if test="lockedGreaterThanOrEqual != null">
				and E.locked &gt;= #{lockedGreaterThanOrEqual}
			</if>

			<if test="lockedLessThanOrEqual != null">
				and E.locked &lt;= #{lockedLessThanOrEqual}
			</if>
			 
		</where>
	</sql>

</mapper>