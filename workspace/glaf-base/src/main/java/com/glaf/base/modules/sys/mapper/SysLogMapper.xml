<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.base.modules.sys.mapper.SysLogMapper">

	<resultMap id="sysLogResultMap"	type="com.glaf.base.modules.sys.model.SysLog">
		<id property="id" column="ID" jdbcType="BIGINT" />
		<result property="account" column="ACCOUNT" jdbcType="VARCHAR"/>
		<result property="ip" column="IP" jdbcType="VARCHAR"/>
		<result property="createTime" column="CREATETIME" jdbcType="TIMESTAMP"/>
		<result property="operate" column="OPERATE" jdbcType="VARCHAR"/>
		<result property="flag" column="FLAG" jdbcType="INTEGER"/>
	</resultMap>

 
	<insert id="insertSysLog" parameterType="com.glaf.base.modules.sys.model.SysLog">
		insert into sys_log 
		<trim prefix="(" suffix=")" suffixOverrides=",">
		    ID
			<if test="account != null">
				,ACCOUNT 
			</if>
			<if test="ip != null">
				,IP 
			</if>
			<if test="createTime != null">
				,CREATETIME 
			</if>
			<if test="operate != null">
				,OPERATE 
			</if>
			<if test="flag != null">
				,FLAG 
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			  #{id, jdbcType=BIGINT}
	     
			<if test="account != null">
				,#{account, jdbcType=VARCHAR}
			</if>
			<if test="ip != null">
				,#{ip, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
			<if test="operate != null">
				,#{operate, jdbcType=VARCHAR}
			</if>
			<if test="flag != null">
				,#{flag, jdbcType=INTEGER}
			</if>
		</trim>
	</insert>

	 
	<update id="updateSysLog" parameterType="com.glaf.base.modules.sys.model.SysLog">
		update sys_log
		set
		<trim prefix="" suffix="" suffixOverrides=",">		
			<if test="account != null">
				ACCOUNT = #{account, jdbcType=VARCHAR},
			</if>
			<if test="ip != null">
				IP = #{ip, jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				CREATETIME = #{createTime, jdbcType=TIMESTAMP},
			</if>
			<if test="operate != null">
				OPERATE = #{operate, jdbcType=VARCHAR},
			</if>
			<if test="flag != null">
				FLAG = #{flag, jdbcType=INTEGER},
			</if>
		</trim>
		where
          ID = #{id, jdbcType=BIGINT}
		
	</update>

 
	<delete id="deleteSysLogById" parameterType="long"> 
        delete from sys_log
        where ID =	#{id}
	</delete>
	
	<delete id="deleteSysLogs" parameterType="com.glaf.base.modules.sys.query.SysLogQuery">
		delete from sys_log
		where ( 
 			  ID IN
		<foreach item="x_rowId" index="index" collection="rowIds" 
			open="(" separator="," close=")">
                  #{x_rowId}
		</foreach>
		)
	</delete>

	<select id="getSysLogById" parameterType="long" resultMap="sysLogResultMap">
		select * from sys_log where ID = #{id}
	</select>


	<select id="getSysLogs" 
		parameterType="com.glaf.base.modules.sys.query.SysLogQuery"
		resultMap="sysLogResultMap">
		select E.*
		<include refid="selectSysLogsSql" />
		<choose>
			<when test="orderBy != null">
		     order by ${orderBy}
			</when>
			<otherwise>
		      order by E.CREATETIME desc
			</otherwise>
		</choose>
	</select>

	<select id="getSysLogCount" 
		parameterType="com.glaf.base.modules.sys.query.SysLogQuery"
		resultType="int">
		select count(*)
		<include refid="selectSysLogsSql" />
	</select>

	<sql id="selectSysLogsSql">

		from sys_log E
		 
		<where>
		       1 = 1  
	        
			<if test="account != null &amp;&amp; account != '' ">
				and E.ACCOUNT = #{account}
			</if>

			<if test="accountLike != null &amp;&amp; accountLike != '' ">
				and E.ACCOUNT like #{accountLike}
			</if>

			<if test="accounts != null &amp;&amp; accounts.size() &gt; 0">
			    and E.ACCOUNT IN
				<foreach item="x_account" index="index" collection="accounts" 
					open="(" separator="," close=")">
                  #{x_account}
				</foreach>
			</if>
	        
			<if test="ip != null &amp;&amp; ip != '' ">
				and E.IP = #{ip}
			</if>

			<if test="ipLike != null &amp;&amp; ipLike != '' ">
				and E.IP like #{ipLike}
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME &gt;= #{createTimeGreaterThanOrEqual}
			</if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME &lt;= #{createTimeLessThanOrEqual}
			</if>
   
			<if test="operate != null &amp;&amp; operate != '' ">
				and E.OPERATE = #{operate}
			</if>

			<if test="flag != null">
				and E.FLAG = #{flag}
			</if>

			<if test="flagGreaterThanOrEqual != null">
				and E.FLAG &gt;= #{flagGreaterThanOrEqual}
			</if>

			<if test="flagLessThanOrEqual != null">
				and E.FLAG &lt;= #{flagLessThanOrEqual}
			</if>
			 
		</where>
	</sql>

</mapper>